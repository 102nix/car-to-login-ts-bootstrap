{"version":3,"sources":["imgs/email2.png","imgs/calendar2.png","imgs/info.png","types/LoginStoreType.ts","api/api.ts","redux/loginAC.ts","types/AllTOStoreType.ts","components/NavbarComponent/NavbarComponent.tsx","components/Inputs/InpuntComponent.tsx","components/Register/Register.tsx","components/Login/Login.tsx","redux/allTOAC.ts","components/Loader/Loader.js","components/RegulationTO/RegulationTO.tsx","components/RegulationTO/ContainerRegulationTO.tsx","components/Inputs/TextareaComponent.tsx","components/AddTo/addTO.tsx","components/ModalEdit/ModalEdit.tsx","components/MadeTO/MadeTo.tsx","components/MadeTO/ContainerMadeTO.tsx","components/Home/Home.js","components/Footer/Footer.tsx","components/Info/Info.tsx","components/Calendar/GetMonthData.ts","components/Calendar/Calendar.tsx","components/Calendar/CalendarContainer.tsx","components/Recharts/Recharts.tsx","App.js","serviceWorker.js","redux/allToReducer.ts","redux/loginReducer.ts","redux/store.ts","index.js"],"names":["module","exports","LoginTypes","listAPI","src_list","axios","get","dataCarTO","id","Date","now","put","authAPI","email","password","post","returnSecureToken","allTOTypes","setRegister","reg","type","REGISTER","setLogin","log","LOGIN","setLoader","val","SET_LOADER","connector","connect","state","logined","loginReducer","props","history","useHistory","useEffect","localStorage","getItem","className","Navbar","expand","variant","Brand","to","Toggle","aria-controls","Collapse","exact","onClick","regLogin","push","InputComponent","useField","field","meta","Form","Group","touched","error","registered","load","onRegistered","dataUserForm","dispatch","a","initialValues","confirmpassword","validationSchema","Yup","required","min","oneOf","onSubmit","dataForm","console","placeholder","name","disabled","role","aria-hidden","onLogined","response","data","setItem","setCurrentPage","UPDATE_CURRENT_PAGE","reFresh","FRESH_PAGINATION","rechartsAC","UPDATE_RECHARTS","onGetListTO","responseList","Object","values","list","READ_LIST","Loader","RegulationTO","title","text","split","map","e","TOList","allToReducer","currentPage","start","end","undefined","pages","pageCount","Math","ceil","length","i","doPaginate","dataPaginat","slice","key","titleTo","textTo","TextareaComponent","onSetListTO","URL_FOR_UPDATE","priceTo","ModalEdit","document","addEventListener","escFunction","event","setModal","Modal","show","showModal","onHide","url","onUpdateListTO","MadeTo","editTO","editData","editDataModal","EDIT_DATA","MODAL_FALSE_TRUE","URL_LIST","Home","Carousel","Item","src","alt","Footer","calendar","width","height","href","info","Info","DAYS_IN_MONTH","areEqual","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","getDay","getDayOfWeek","day","j","Calendar","monthSelect","React","createRef","yearSelect","handleSelectChange","parseInt","current","value","onSelectChange","selectedDate","toLocaleDateString","handlePrevMonthButtonClick","ref","onChange","months","years","handleNextMonthButtonClick","weekDayNames","monthData","week","handleDayClick","classnames","baseDate","CalendarContainer","useState","setDate","setSelectedDate","setMonthData","prevDate","nextDate","selectDate","dataRecharts","onDataCharting","listTO","dataPrice","pricePr","priceWrk","priceProduct","priceWork","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","stroke","App","path","render","Boolean","window","location","hostname","match","initialState","action","RESET_STATE","rootReducer","combineReducers","storage","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5c29e2c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/email2.ab47d52f.png\";","module.exports = __webpack_public_path__ + \"static/media/calendar2.25c7dc32.png\";","module.exports = __webpack_public_path__ + \"static/media/info.70c65088.png\";","import { ThunkAction } from 'redux-thunk'\nimport { AppStateType } from '../redux/store'\n\nexport enum LoginTypes {\n  REGISTER = 'REGISTER',\n  LOGIN = 'LOGIN',\n  SET_LOADER = 'SET_LOADER' \n}\nexport type InitialStateType = {\n  registered: null | boolean\n  logined: null | boolean\n  load: boolean\n}\n\nexport type ActionsType = SetRegisterType | SetLoginType | SetLoaderType\n\nexport type SetRegisterType = {\n  type: LoginTypes.REGISTER\n  reg: null | boolean\n}\nexport type SetLoginType = {\n  type: LoginTypes.LOGIN\n  log: null | boolean\n}\nexport type SetLoaderType = {\n  type: LoginTypes.SET_LOADER\n  val: boolean\n}\nexport type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\n","import axios from 'axios';\n\nexport type DataCarTOType = {\n  priceTo: string\n  textTo: string\n  titleTo: string\n  id?: number\n}\n\n\nexport const listAPI = {\n\n  getlistTO (src_list: string) {\n    return axios.get<Object>(src_list)\n  },\n  setListMadeTO (dataCarTO: DataCarTOType) {\n    dataCarTO.id = Date.now()\n    return axios.put<Object>(`https://made-car-to.firebaseio.com/${dataCarTO.id}.json`, dataCarTO)\n  },\n  updateListMadeTO (dataCarTO: DataCarTOType) {\n    return axios.put<Object>(`https://made-car-to.firebaseio.com/${dataCarTO.id}.json`, dataCarTO)\n  }\n}\n\nexport const authAPI = {\n  login (email: string, password: string) {\n    const key = 'AIzaSyBA4J3rUo_F2m2MLz4NzGRUIBg-oTtOT_c' // API-key!!!\n    return axios.post(`https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=${key}`, {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    })\n  },\n  register (email: string, password: string) {\n    const key = 'AIzaSyBA4J3rUo_F2m2MLz4NzGRUIBg-oTtOT_c' // API-key!!!\n    return axios.post(`https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=${key}`, {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    })\n  }\n}","import { authAPI } from '../api/api'\nimport { LoginTypes, SetLoaderType, SetLoginType, SetRegisterType, ThunkType } from \"../types/LoginStoreType\"\nimport { RegisterFormUsesData } from \"../types/RegisterType\"\n\nexport const setRegister = (reg: boolean): SetRegisterType => ({type: LoginTypes.REGISTER, reg})\nexport const setLogin = (log: boolean): SetLoginType => ({type: LoginTypes.LOGIN, log})\nexport const setLoader = (val: boolean): SetLoaderType => ({type: LoginTypes.SET_LOADER, val})\n\nexport const onRegistered = (dataUserForm: RegisterFormUsesData): ThunkType => async (dispatch) => {\n  try {\n    await authAPI.register(dataUserForm.email, dataUserForm.password)\n    dispatch(setRegister(true))\n    dispatch(setLoader(false))\n  } catch (error) {\n    dispatch(setRegister(false))\n  }\n}\nexport const onLogined = (dataUserForm: RegisterFormUsesData): ThunkType => async (dispatch) => {\n  try {\n    let response = await authAPI.login(dataUserForm.email, dataUserForm.password)\n    dispatch(setLogin(response.data.registered)) \n    dispatch(setLoader(false))\n  } catch (error) {\n    dispatch(setLogin(false))\n    dispatch(setLoader(false))\n  }\n}","import { ThunkAction } from \"redux-thunk\"\nimport { AppStateType } from \"../redux/store\"\n\nexport enum allTOTypes {\n  READ_LIST = 'READ_LIST',\n  UPDATE_CURRENT_PAGE = 'UPDATE_CURRENT_PAGE',\n  FRESH_PAGINATION = 'FRESH_PAGINATION',\n  MODAL_FALSE_TRUE = 'MODAL_FALSE_TRUE',\n  EDIT_DATA = 'EDIT_DATA',\n  RESET_STATE = 'RESET_STATE',\n  URL_FOR_UPDATE = 'https://made-car-to.firebaseio.com/.json',\n  UPDATE_RECHARTS = 'UPDATE_RECHARTS'\n}\n\nexport type TOListType = Array<EditDataType>\nexport type EditDataType = {id: number, titleTo: string, textTo: string, priceTo: string}\nexport type DataRechartsType = Array<{title: string, priceProduct: string | number, priceWork: string | number}> \nexport type DataChartingListType = Array<{priceTo: string, textTo: string, titleTo: string}>\n\nexport type InitialStateType = {\n  TOList: null | TOListType\n  currentPage: number\n  start: number\n  end: number\n  showModal: boolean\n  editData: null | EditDataType\n  dataRecharts: null | DataRechartsType\n}\n\nexport type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType> \n\nexport type ThunkTypeNotPromise = ThunkAction<void, AppStateType, unknown, ActionsType> \n\nexport type ActionsType = GetTOListAC | SetCurrentPage | ReFresh | SetModal | EditDataModal | ResetState | RechartsAC\nexport type GetTOListAC = {\n  type: allTOTypes.READ_LIST\n  list: TOListType\n}\nexport type SetCurrentPage = {\n  type: allTOTypes.UPDATE_CURRENT_PAGE\n  val: {currentPage: number, start: number, end: number}\n}\nexport type ReFresh = {\n  type: allTOTypes.FRESH_PAGINATION\n}\nexport type SetModal = {\n  type: allTOTypes.MODAL_FALSE_TRUE\n  val: boolean\n}\nexport type EditDataModal = {\n  type: allTOTypes.EDIT_DATA\n  val: EditDataType\n}\nexport type ResetState = {\n  type: allTOTypes.RESET_STATE\n}\nexport type RechartsAC = {\n  type: allTOTypes.UPDATE_RECHARTS\n  data: DataRechartsType\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport './NavbarComponent.scss'\nimport { setLogin } from '../../redux/loginAC'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { NavbarStateType, NavbarTypes } from '../../types/NavbarTypes'\n\nconst NavbarComponent: React.FC<NavbarTypes> = props => {\n\n  const history = useHistory()\n\n  const onExit = () => {\n    delete localStorage.regLogin\n    props.setLogin(null)\n    history.push('/register')\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('regLogin')) props.setLogin(true)\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <Navbar expand=\"lg\" variant=\"dark\" className=\"navbarBG\">\n        <Navbar.Brand><NavLink to=\"/\" className=\"nav-link\">Nissan Qashqai</NavLink></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-toggle\" />\n        <Navbar.Collapse id=\"basic-toggle\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/regulation-to\" className=\"nav-link\">ТО по регламенту</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              { \n                props.logined === true &&\n                <NavLink to=\"/made-to\" className=\"nav-link\">Сделанные ТО</NavLink>\n              }\n            </li>\n            <li>\n              { \n                props.logined === true &&\n                <NavLink to=\"/add-to\" className=\"nav-link\">Добавить ТО</NavLink>\n              }\n            </li>\n            <li>\n              {\n                props.logined === true &&\n                <button className=\"btn nav-link\" onClick={onExit}>Выйти</button>\n              }\n              {\n                (props.logined === false || props.logined === null) &&\n                <NavLink to='/login' className=\"nav-link\">Login</NavLink>\n              }\n            </li>\n          </ul>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): NavbarStateType => {\n  return {\n    logined: state.loginReducer.logined\n  }\n}\nconst connector = connect(mapStateToProps, { setLogin })\nexport default connector(NavbarComponent)\n","import React from 'react'\nimport { useField } from 'formik'\nimport { Form } from 'react-bootstrap'\nimport { IValuesInput } from '../../types/InputTypes'\n\nexport const InputComponent: React.FC<IValuesInput> = props => {\n\n  const [field, meta] = useField(props)\n\n  return (\n    <Form.Group>\n      <input\n        className=\"form-control\"\n        {...props}\n        {...field}\n      />\n      { meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>  \n      ): null}\n    </Form.Group>\n  )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport './Register.scss'\n//reducer & AC:\nimport { setLoader, onRegistered } from '../../redux/loginAC'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { RegisterFormUsesData, RegisterStateType, RegisterTypes } from '../../types/RegisterType';\nimport { InputComponent } from '../Inputs/InpuntComponent'\n\nconst Register: React.FC<RegisterTypes> = props => {\n\n  const history = useHistory()\n\n  const onLocalStorage = () => {\n    history.push('/login')\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"reg-content\">\n        <div className=\"row\">\n          <p className=\"col-12 text-center title-reg\">Регистрация:</p>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {\n              props.registered !== true || props.registered === null ?\n                <Formik\n                  initialValues={{\n                    email: '',\n                    password: '',\n                    confirmpassword: ''\n                  }}\n                  validationSchema={Yup.object({\n                    email: Yup.string().email('Invalid email').required('Require'),\n                    password: Yup.string().min(6, 'Must have 6 characters').required('Required'),\n                    confirmpassword: Yup.string().oneOf([Yup.ref('password')], 'Пароли не совпали')\n                  })}\n                  onSubmit={\n                    (dataForm: RegisterFormUsesData): void => {\n                      console.log(dataForm)\n                      props.onRegistered(dataForm)\n                      props.setLoader(true)\n                    }\n                  }\n                >\n                  <Form className=\"reg-form\">\n                    <InputComponent\n                      placeholder=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                    />\n                    <InputComponent\n                      placeholder=\"Password\"\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                    />\n                    <InputComponent\n                      placeholder=\"Password confirm\"\n                      id=\"confirmpassword\"\n                      name=\"confirmpassword\"\n                      type=\"password\"\n                    />\n                    <div className=\"add-action\">\n                      {\n                        !props.load &&\n                        <button className=\"btn btn-success\">\n                          Register\n                        </button>\n                      }\n                      {\n                        props.load &&\n                        <button className=\"btn btn-primary\" type=\"button\" disabled>\n                          <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                          Registering...\n                        </button>\n                      }\n                      <button className=\"btn btn-access have-login\" onClick={() => history.push('/login')}>Есть Login?</button>\n                    </div>\n                  </Form>\n                </Formik>\n                :\n                onLocalStorage()\n            }\n            {\n              props.registered === false &&\n              <div className=\"error-reg\">Ошибка регистрации!</div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): RegisterStateType => {\n  return {\n    registered: state.loginReducer.registered,\n    load: state.loginReducer.load\n  }\n}\n\nconst connector = connect(mapStateToProps, { onRegistered, setLoader })\nexport default connector(Register)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport './Login.scss'\n//reducer & AC:\nimport { setLoader, onLogined } from '../../redux/loginAC'\n//types:\nimport { AppStateType } from '../../redux/store';\nimport { LoginDispatcType, LoginFormDataType, LoginStateType } from '../../types/LoginTypes';\nimport { InputComponent } from '../Inputs/InpuntComponent'\n\nconst Login: React.FC<LoginStateType & LoginDispatcType> = props => {\n\n  const history = useHistory()\n\n  const onLocalStorage = () => {\n    localStorage.setItem('regLogin', 'logined')\n    history.push('/')\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"log-content\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center title-log\">Login:</div>\n        </div>\n        {props.logined !== true || props.logined === null ?\n          <div className=\"row\">\n            <Formik\n              initialValues={{\n                email: '',\n                password: ''\n              }}\n              validationSchema={Yup.object({\n                email: Yup.string().email('Invalid email').required('Required'),\n                password: Yup.string().min(6, 'Must have 6 characters minimum!').required('Required')\n              })}\n              onSubmit={\n                (dataForm: LoginFormDataType): void => {\n                  console.log(dataForm)\n                  props.setLoader(true)\n                  props.onLogined(dataForm)\n                }\n              }\n            >\n              <Form className=\"log-form\">\n                <InputComponent\n                  placeholder=\"Email\"\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                />\n                <InputComponent\n                  placeholder=\"Password\"\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                />\n                <div className=\"add-action\">\n                  {\n                    !props.load &&\n                    <button type=\"submit\" className=\"btn btn-success\">\n                      Login\n                    </button>\n                  }\n                  {\n                    props.load &&\n                    <button className=\"btn btn-primary\" type=\"button\" disabled>\n                      <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                          Loginning...\n                    </button>\n                  }\n                  <button type=\"button\" className=\"btn btn-access have-login\" onClick={() => history.push('/register')}>Нет Login'а?</button>\n                </div>\n              </Form>\n            </Formik>\n          </div> : onLocalStorage()\n        }\n        {\n          props.logined === false &&\n          <div className=\"error-reg\">Неверный Login или password!</div>\n        }\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): LoginStateType => {\n  return {\n    logined: state.loginReducer.logined,\n    load: state.loginReducer.load\n  }\n}\n\nconst connector = connect(mapStateToProps, { onLogined, setLoader })\nexport default connector(Login)\n","import { DataCarTOType, listAPI } from '../api/api';\nimport { \n  allTOTypes, \n  DataChartingListType, \n  DataRechartsType, \n  EditDataModal, \n  EditDataType, \n  GetTOListAC, \n  RechartsAC, \n  SetCurrentPage, \n  SetModal, \n  ThunkType, \n  ThunkTypeNotPromise, \n  TOListType } from \"../types/AllTOStoreType\"\n\nexport const getTOListAC = (list: TOListType): GetTOListAC => ({type: allTOTypes.READ_LIST, list})\nexport const setCurrentPage = (val: {currentPage: number, start: number, end: number}): SetCurrentPage => \n  ({type: allTOTypes.UPDATE_CURRENT_PAGE, val})\nexport const reFresh = () => ({type: allTOTypes.FRESH_PAGINATION})\nexport const setModal = (val: boolean): SetModal => ({type: allTOTypes.MODAL_FALSE_TRUE, val})\nexport const editDataModal = (val: EditDataType): EditDataModal => ({type: allTOTypes.EDIT_DATA, val})\nexport const resetState = () => ({type: allTOTypes.RESET_STATE})\nexport const rechartsAC = (data: DataRechartsType): RechartsAC => ({type: allTOTypes.UPDATE_RECHARTS, data})\n\nexport const onGetListTO = (src_list: string): ThunkType => async (dispatch) => {\n  try {\n    const response = await listAPI.getlistTO(src_list)\n    const responseList: TOListType = Object.values(response.data)\n    dispatch(getTOListAC(responseList))\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const onSetListTO = (dataForm: DataCarTOType): ThunkType => async (dispatch) => {\n  try {\n    await listAPI.setListMadeTO(dataForm)\n    dispatch(onGetListTO(allTOTypes.URL_FOR_UPDATE))\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const onUpdateListTO = (dataForm: DataCarTOType): ThunkType => async (dispatch) => {\n  try {\n    await listAPI.updateListMadeTO(dataForm)\n    dispatch(onGetListTO(allTOTypes.URL_FOR_UPDATE))\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const onDataCharting = (listTO: DataChartingListType): ThunkTypeNotPromise => (dispatch) => {\n  const dataPrice: DataRechartsType = []\n  for (let data of listTO) {\n    const pricePr: Array<string | number> = data.priceTo.split(': ')\n    const priceWrk: Array<string | number> = data.textTo.split(': ')\n    const title: Array<string> = data.titleTo.split(';')\n    if (pricePr[1] === undefined) pricePr[1] = 0\n    if (priceWrk[1] === undefined) priceWrk[1] = 0\n\n    dataPrice.push(\n      {\n        title: title[0].split(' ')[0],\n        priceProduct: pricePr[1], \n        priceWork: priceWrk[1]\n      }\n    )\n  }\n  dispatch(rechartsAC(dataPrice))\n}","import React from 'react'\nimport './Loader.scss'\n\nconst Loader = props => {\n  return (\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  )\n}\n\nexport default Loader","import React from 'react'\nimport './RegulationTO.scss'\n//types:\nimport { RegTOContainerProps } from '../../types/RegulationTOTypes'\n\nconst RegulationTO: React.FC<RegTOContainerProps> = props => {\n  return (\n    <div className=\"row list-to\">\n      <div className=\"col-6 title-all\">\n        {props.title}\n      </div>\n      <div className=\"col-6 text-all\">\n        {\n          props.text\n            .split('. ')\n              .map(e => <p>{e}</p> )\n        }\n      </div>\n    </div>\n\n  )\n}\n\nexport default RegulationTO","import React from 'react'\nimport { connect } from 'react-redux'\nimport './ContainerRegulationTO.scss';\nimport { onGetListTO, setCurrentPage, reFresh } from '../../redux/allTOAC'\nimport Loader from '../Loader/Loader';\nimport RegulationTO from './RegulationTO'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { ContainerRegTOStateType, ContainerRegTOTypes } from '../../types/RegulationTOTypes';\n\nconst ContainerRegulationTO: React.FC<ContainerRegTOTypes> = props => {\n\n  const URL_LIST: string = 'https://car-to.firebaseio.com/.json'\n\n  if (props.TOList === null) props.onGetListTO(URL_LIST)\n  if (props.currentPage === undefined || props.start === undefined || props.end === undefined) props.reFresh()\n\n  /////Pagination/////\n\n  const pages: Array<number> = []\n\n  if (props.TOList !== null) {\n    const pageSize: number = 3\n    const pageCount: number = Math.ceil(props.TOList.length / pageSize)\n    for (let i = 1; i < pageCount; i++) {\n      pages.push(i)\n    }\n  }\n\n  const doPaginate = (val: Array<number>) => {\n    const dataPaginat = {\n      currentPage: (props.currentPage + val[0]), // props.currentPage -/+ 1\n      start: (props.start + val[1]),\n      end: (props.end + val[1])\n    }\n    props.setCurrentPage(dataPaginat)\n  }\n\n  /////Pagination/////\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          {\n            props.currentPage !== 1 &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([-1, -2])}>&#171;</small>\n          }\n          {\n            props.currentPage <= pages.length &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([+1, +2])}>&#187;</small>\n          }\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 loader-container\">\n          {\n            props.TOList === null &&\n            <div className=\"loader\"><Loader /></div>\n          }\n        </div>\n      </div>\n      {\n        props.TOList !== null && props.TOList.length !== 0\n          ?\n          <>  \n            <div className=\"row text-center\">\n              <div className=\"col-12 title-regulation-to\">ТО по регламенту:</div>\n            </div>\n            {\n              props.TOList\n                .slice(props.start, props.end)\n                  .map(list => (<RegulationTO\n                      key={list.id}\n                      title={list.titleTo}\n                      text={list.textTo}\n                    />)\n                  )\n            }\n          </>\n          : <div className=\"list-empty\">\n              <p>Список пуст</p>\n            </div>\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): ContainerRegTOStateType => {\n  return {\n    TOList: state.allToReducer.TOList, \n    currentPage: state.allToReducer.currentPage,\n    start: state.allToReducer.start,\n    end: state.allToReducer.end\n  }\n}\nconst connector = connect(mapStateToProps, { onGetListTO, setCurrentPage, reFresh }) \nexport default connector(ContainerRegulationTO)","import React from 'react'\nimport { useField } from 'formik'\nimport { Form } from 'react-bootstrap'\nimport { IValuesInput } from '../../types/InputTypes'\n\nexport const TextareaComponent: React.FC<IValuesInput> = props => {\n\n  const [field, meta] = useField(props)\n\n  return (\n    <Form.Group>\n      <textarea\n        className=\"form-control\"\n        {...props}\n        {...field}\n      />\n      { meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>  \n      ): null}\n    </Form.Group>\n  )\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport './addTo.scss'\nimport { onSetListTO } from '../../redux/allTOAC'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { AddTOStateType, AddTOTypes, FormAddUsesDataType } from '../../types/AddTOTypes';\nimport { InputComponent } from '../Inputs/InpuntComponent'\nimport { TextareaComponent } from '../Inputs/TextareaComponent'\n\nconst CreateMadeTO: React.FC<AddTOTypes> = props => {\n\n  const history = useHistory()\n  \n  useEffect(() => {\n    if (props.logined !== true) history.push('/login')\n  }, [])\n  \n  return (\n    <div className=\"container\">\n      <div className=\"add-content\">\n        <div className=\"row\">\n          <div className=\"col-12 title-add-content\">\n            Добавить ТО:\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Formik\n              initialValues={{\n                titleTo: '',\n                textTo: '',\n                priceTo: ''\n              }}\n              validationSchema={Yup.object({\n                titleTo: Yup.string().required('Required'), \n                textTo: Yup.string().required('Required'),\n                priceTo: Yup.string().required('Required') \n              })}\n              onSubmit={\n                (dataForm: FormAddUsesDataType): void => {\n                  props.onSetListTO(dataForm)\n                  history.push('/made-to')\n                }\n              }\n            >\n              <Form>\n                <InputComponent\n                  placeholder=\"Пробег и дата\"\n                  id=\"titleTo\"\n                  name=\"titleTo\"\n                  type=\"text\" \n                />\n                <TextareaComponent\n                  placeholder=\"Регламентные работы и стоимость\"\n                  id=\"text\"\n                  name=\"textTo\"\n                />\n                <TextareaComponent\n                  placeholder=\"Стоимость комплектующих\"\n                  id=\"price\"\n                  name=\"priceTo\"\n                />\n                <div className=\"add-action\">\n                  <button className=\"btn btn-success\">Сохранить</button>\n                  <button className=\"btn btn-danger\" onClick={() => {history.push('/')}}>Отмена</button>\n                </div>\n              </Form>\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nlet mapStateToprops = (state: AppStateType): AddTOStateType => {\n  return{\n    logined: state.loginReducer.logined\n  }\n}\n\nconst connector = connect(mapStateToprops, { onSetListTO })\nexport default connector(CreateMadeTO)","import React, { useEffect } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport './ModalEdit.scss'\n//types:\nimport { ModalEditContainerTypes, OnSubmitType } from '../../types/ModalTypes'\nimport { InputComponent } from '../Inputs/InpuntComponent'\nimport { TextareaComponent } from '../Inputs/TextareaComponent'\n\nexport const ModalEdit: React.FC<ModalEditContainerTypes> = props => {\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction, false);\n  },[])\n\n  const escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') props.setModal(false)\n  }\n\n  const handleClose = () => {\n    props.setModal(false)\n  }\n\n  return(\n    <Modal show={props.showModal} onHide={handleClose}>\n      <Formik\n        initialValues={{\n          titleTo: props.titleTo,\n          textTo: props.textTo,\n          priceTo: props.priceTo\n        }}\n        validationSchema={Yup.object({\n          titleTo: Yup.string().required('Required'), \n          textTo: Yup.string().required(''),\n          priceTo: Yup.string().required('Required')\n        })}\n        onSubmit={\n          (dataForm: OnSubmitType): void => {\n            dataForm.id = props.id // Расширяется пришедший объект свойством id (id из контейнерных props)\n            dataForm.url = props.url // Расширяется пришедший объект свойством url (url из контейнерных props)\n            props.onUpdateListTO(dataForm)\n            props.setModal(false)\n          }\n        }\n      >\n        <Form>\n          <InputComponent\n            placeholder=\"Пробег и дата\"\n            id=\"titleTo\"\n            name=\"titleTo\"\n            type=\"text\" \n          />\n          <TextareaComponent\n            placeholder=\"Регламентные работы и стоимость\"\n            id=\"text\"\n            name=\"textTo\"\n          />\n          <TextareaComponent\n            placeholder=\"Стоимость комплектующих\"\n            id=\"price\"\n            name=\"priceTo\"\n          />\n          <div className=\"modal-action\">\n            <button className=\"btn btn-success\">Сохранить</button>\n            <button className=\"btn btn-danger\" onClick={() => props.setModal(false)}>Отменить</button>\n          </div>\n        </Form>\n      </Formik>\n    </Modal>\n  )\n}\n\n","import React from 'react'\nimport './MadeTo.scss'\n// types:\nimport { MadeContainerProps } from '../../types/MadeTOTypes';\n\nexport const MadeTo: React.FC<MadeContainerProps> = props => {\n  return (\n    <div \n      className=\"row list-made-to\" \n      onClick={() => props.editTO({\n        id: props.id, \n        titleTo: \n        props.titleTo, \n        textTo: props.textTo, \n        priceTo: props.priceTo})}\n    >\n      <div className=\"col-12 col-md-2\">\n        <div className=\"title-made\">\n          {\n            props.titleTo\n              .split(';')\n                .map((e, i) => {\n                  if (i === 0) return <p key={i} className=\"odometr\">{e}</p>\n                  return <p key={i} className=\"data\">{e}</p>\n                })\n          }\n        </div>\n      </div>\n      <div className=\"col-12 col-md-5\">\n        <div className=\"text-made\">\n          {\n            props.textTo\n              .split(';')\n                .map(e => <p key={e}>{e}</p>)\n          }\n        </div>\n      </div>\n      <div className=\"col-12 col-md-5\">\n        <div className=\"price-made\">\n          { \n            props.priceTo !== undefined \n              ? props.priceTo\n                  .split(';')\n                    .map(e => <p key={e}>{e}</p>)\n              : null\n          }\n        </div>\n      </div>\n  </div>\n  )\n}\n\nexport default MadeTo","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport './CntainerMadeTo.scss'\nimport { \n  onGetListTO, \n  onUpdateListTO, \n  setCurrentPage, \n  reFresh, \n  editDataModal, \n  rechartsAC, \n  setModal } from '../../redux/allTOAC'\nimport { ModalEdit } from '../ModalEdit/ModalEdit'\nimport MadeTo from './MadeTo'\nimport Loader from '../Loader/Loader'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { ContainerMadeTOStateType, MadeTOTypes } from '../../types/MadeTOTypes';\nimport { EditDataType } from '../../types/AllTOStoreType'\n\nconst ContainerMadeTO: React.FC<MadeTOTypes> = props => {\n\n  const URL_LIST: string = 'https://made-car-to.firebaseio.com/.json'\n  const history = useHistory()\n\n  useEffect(() => {\n    if (props.logined !== true) history.push('/login')\n  }, [])\n\n  if (props.TOList === null) props.onGetListTO(URL_LIST)\n  if ( props.currentPage === undefined || props.start === undefined || props.end === undefined ) props.reFresh()\n\n  /////Pagination/////\n  let pages: Array<number> = []\n\n  if (props.TOList !== null) {\n    const pageSize = 4\n    const pageCount = Math.ceil(props.TOList.length / pageSize)\n\n    for (let i = 1; i <= pageCount; i++) {\n      pages.push(i)\n    }\n  }\n\n  const doPaginate = (val: Array<number>) => {\n    const dataPaginat = {\n      currentPage: (props.currentPage + val[0]),\n      start: (props.start + val[1]),\n      end: (props.end + val[1])\n    }\n    props.setCurrentPage(dataPaginat)\n  }\n\n /////Pagination/////\n\n const editTO = (val: EditDataType) => {\n  props.editDataModal(val)\n}\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          { \n            props.currentPage !== 1 &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([-1, -3])}>&#171;</small>\n          }\n          {\n            props.currentPage <= pages.length &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([1, 3])}>&#187;</small>\n          }\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 loader-container\">\n          { \n            props.TOList === null &&\n            <div className=\"loader\"><Loader /></div>\n          }\n        </div>\n      </div>\n      { \n        props.TOList !== null && props.TOList.length !== 0 \n          ? <>\n              {\n                props.editData !== null &&\n                <ModalEdit\n                  titleTo={props.editData.titleTo}\n                  textTo={props.editData.textTo}\n                  priceTo={props.editData.priceTo}\n                  id={props.editData.id}\n                  url={URL_LIST}\n                  showModal={props.showModal}\n                  setModal={props.setModal}\n                  onUpdateListTO={props.onUpdateListTO}\n                />\n\n              }\n              <div className=\"row text-center\">\n                <div className=\"col-12 title-made-to\">Сделанные ТО:</div>\n              </div>\n              {\n                props.TOList\n                  .slice(props.start, props.end)                 \n                    .map(list => (<MadeTo \n                      editTO={editTO}\n                      key={list.id}\n                      id={list.id}\n                      titleTo={list.titleTo}\n                      textTo={list.textTo}\n                      priceTo={list.priceTo}\n                      />)\n                    )\n                }\n                <div className=\"row text-center\">\n                  <NavLink to=\"/recharts\" className=\"link-to-recharts\">График расходов</NavLink>\n                </div>\n           </>\n          : \n            <div className=\"list-empty\">\n              <p>Список пуст</p>\n            </div>\n      }\n    </div>\n  )\n}\nconst mapStateToProps = (state: AppStateType): ContainerMadeTOStateType => {\n  return {\n    TOList: state.allToReducer.TOList,\n    currentPage: state.allToReducer.currentPage,\n    start: state.allToReducer.start,\n    end: state.allToReducer.end,\n    editData: state.allToReducer.editData,\n    showModal: state.allToReducer.showModal,\n    logined: state.loginReducer.logined\n  }\n}\nconst connector = connect(mapStateToProps, { onGetListTO, setCurrentPage, reFresh, editDataModal, rechartsAC, setModal, onUpdateListTO })\nexport default connector(ContainerMadeTO)","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport './Home.scss';\n\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Carousel>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://avtoportal.ru/uploads/posts/2017-07/1501488191_0caa1c573b704f708263d6b162eec19b.jpg\"\n                alt=\"First slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://static2.sakh.com/i/md/auto/sales/12/83/1283135/n1283135_20190314082622_88ed3d0a.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://auto-database.com/image/pictures-of-nissan-qashqai2-2013-122809.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://s.auto.drom.ru/i24240/s/photos/36580/36579472/gen1200_469384372.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://s.auto.drom.ru/i24240/s/photos/36580/36579472/gen1200_469384372.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n          </Carousel>\n        </div>\n      </div>\n      <div className=\"row text-center mt-4\">\n        <div className=\"col-12\">\n          Nissan Qashqai 1.6 (J10)\n        </div>\n        <div className=\"col-12\">\n          В 2010 год проведен рестайлинг кроссовера.\n        </div>\n        <div className=\"col-12\">\n          Модел выпускалась до 2013 года.\n        </div>\n      </div>\n      <div className=\"row block-info\">\n        <div className=\"col-12 col-sm-6\">\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Общие\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип кузова\n                  </div>\n                <div className=\"text\">\n                  Внедорожник\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Кол-во дверей\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Кол-во мест\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Класс автомобиля J(кроссовер)\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"name-key\"></div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Двигатель внутреннего сгорания\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем двигателя в куб.см\n                  </div>\n                <div className=\"text\">\n                  1600\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расположение двигателя\n                  </div>\n                <div className=\"text\">\n                  Спереди, поперечно\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расположение цилиндров\n                  </div>\n                <div className=\"text\">\n                  L4\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Клапанов на цилиндр\n                  </div>\n                <div className=\"text\">\n                  4\n                  </div>\n              </div>\n              <div className=\"name-key\"></div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Трансмиссия\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип привода\n                  </div>\n                <div className=\"text\">\n                  передний\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип КПП\n                  </div>\n                <div className=\"text\">\n                  механика 5 ст.\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Подвеска\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Передняя\n                  </div>\n                <div className=\"text\">\n                  независимая\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Задняя\n                  </div>\n                <div className=\"text\">\n                  независимая\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-6\">\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Тормазная система\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Передние тормаза\n                  </div>\n                <div className=\"text\">\n                  дисковые\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Задние тормаза\n                  </div>\n                <div className=\"text\">\n                  дисковые\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Эксплуатационные показатели\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Разгон до 100 км/ч, с\n                  </div>\n                <div className=\"text\">\n                  12\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Максимальная скорость, км/ч\n                  </div>\n                <div className=\"text\">\n                  175\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (городской цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  8,4\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (загородный цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  5,7\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (смешанный цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  6,7\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (городской цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (загородный цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (смешанный цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Размеры\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Длина, мм\n                  </div>\n                <div className=\"text\">\n                  4310\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Ширина, мм\n                  </div>\n                <div className=\"text\">\n                  1780\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Высота, мм\n                  </div>\n                <div className=\"text\">\n                  1610\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колесная база, мм\n                  </div>\n                <div className=\"text\">\n                  2630\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колея колес спереди, мм\n                  </div>\n                <div className=\"text\">\n                  1540\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колея колес сзади, мм\n                  </div>\n                <div className=\"text\">\n                  1550\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Размер шин\n                  </div>\n                <div className=\"text\">\n                  215/65 R16\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Снаряженная масса, кг\n                  </div>\n                <div className=\"text\">\n                  1297\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем багажника, л\n                  </div>\n                <div className=\"text\">\n                  352/1513\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем топливного бака, л\n                  </div>\n                <div className=\"text\">\n                  65\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Footer.scss';\nimport email from '../../imgs/email2.png';\nimport calendar from '../../imgs/calendar2.png'\nimport info from '../../imgs/info.png'\n\nconst Footer: React.FC = () => {\n\n  return (\n    <div className=\"container\">\n      <div className=\"footer\">\n        <div className=\"row\">\n        <div className=\"col-12 footer-content\">\n          <div className=\"footer-info\">\n            <NavLink to=\"/calendar\" className=\"nav-link\">\n              <img src={calendar} width=\"45px\" height=\"45px\" alt=\"См календарь\"/> \n            </NavLink>\n            <a href=\"mailto:zalilov@list.ru?subject=Обращения с сайта\" className=\"nav-link\">\n              <img src={email} width=\"45px\" height=\"45px\" alt=\"Отправить email\"/> \n            </a>\n            <NavLink to=\"/info\" className=\"nav-link\">\n              <img src={info} width=\"45px\" height=\"45px\" alt=\"Информация о проекте\"/> \n            </NavLink>\n          </div>\n          <div className=\"copyright-container\">\n            © 2021 Copyright\n          </div>\n          </div>\n        </div>\n        </div>\n      </div>\n  )\n}\nexport default Footer","import React from 'react'\nimport './Info.scss'\n\nconst Info: React.FC = () => {\n  \n   return (\n    <div className=\"info\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">В данном проекте задействованы:</div>\n            <div className=\"card-body\">\n              <p>React, React-router-dom, React Function Components, React hooks, React-Typescript.</p>\n              <p>Redux, Redux-form, Redux-thunk, React-redux.</p>\n              <p>Bootstrap, React-bootstrap, Node-sass, CSS Flexbox.</p>\n              <p>Axios.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Info","const DAYS_IN_WEEK = 7\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nexport function areEqual(a: Date, b: Date | null) {\n\n  if (!a || !b) return false;\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  )\n}\n\nexport function isLeapYear(year: number) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nexport function getDaysInMonth(date: Date) {\n  const month = date.getMonth()\n  const year = date.getFullYear()\n\n  if (isLeapYear(year) && month === 1) {\n    return DAYS_IN_MONTH[month] + 1\n  } else {\n    return DAYS_IN_MONTH[month]\n  }\n}\n\nexport function getDayOfWeek(date: Date) {\n  if (date.getDay() === 0) return 6\n  return date.getDay() - 1\n}\n\nexport function getMonthData(year: number, month: number) {\n  const result: Array<any> = []\n  const date = new Date(year, month)\n  const daysInMonth = getDaysInMonth(date)\n  const monthStartsOn = getDayOfWeek(date)\n  let day = 1\n\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n    result[i] = []\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\n        result[i][j] = undefined\n      } else {\n        result[i][j] = new Date(year, month, day++)\n      }\n    }\n  }\n  return result\n}","import React from 'react';\nimport './Calendar.scss';\nimport { areEqual } from './GetMonthData';\nimport classnames from 'classnames';\n\ntype ContainerProps = {\n  baseDate: Date\n  selectedDate: Date | null\n  handlePrevMonthButtonClick(): void\n  handleNextMonthButtonClick(): void\n  onSelectChange(year: number, month: number): void\n  date: Date\n  months: Array<string>\n  years: Array<number>\n  weekDayNames: Array<string>\n  monthData: any\n  handleDayClick(date: Date): void\n}\n\nconst Calendar: React.FC<ContainerProps> = props => {\n\n  const monthSelect = React.createRef<HTMLSelectElement>()\n  const yearSelect = React.createRef<HTMLSelectElement>();\n  // monthSelect.current?.value\n  const handleSelectChange = () => {\n    const year = parseInt((yearSelect.current?.value || ''), 10)\n    const month = parseInt((monthSelect.current?.value || ''), 10)\n    props.onSelectChange(year, month)\n  }\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row text-center\">\n        <div className=\"col-12\">\n          {\n            props.selectedDate && \n            <p className=\"selected-data-show\">Выбранная дата: {props.selectedDate.toLocaleDateString()}</p>\n          }\n        </div>\n\n          <div className=\"col-12 header-calendar\">\n            <button className='btn btn-light' onClick={props.handlePrevMonthButtonClick}>{'<'}</button>\n            <select \n              className=\"select-calendar\" \n              ref={monthSelect} \n              onChange={handleSelectChange}\n              value={props.date.getMonth()}\n            >\n              {\n                props.months.map((month, i) => {\n                return <option key={month} value={i}>{month}</option>\n                })\n              }\n            </select>\n              <select\n                className=\"select-calendar\" \n                ref={yearSelect} \n                onChange={handleSelectChange}\n                value={props.date.getFullYear()}\n              >\n                {\n                  props.years.map(year => {\n                    return <option key={year} value={year}>{year}</option>\n                  })\n                }\n              </select>\n              <button className='btn btn-light' onClick={props.handleNextMonthButtonClick}>{'>'}</button>\n          </div>\n\n        <div className=\"col-12\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {\n                  props.weekDayNames.map(day => {\n                    return <th key={day}>{day}</th>\n                  })\n                }\n              </tr>\n            </thead>\n            <tbody>\n              { \n                props.monthData.map((week: Array<Date>, i: number) => {\n                  return <tr key={i}>\n                    { \n                      week.map((date: Date, i: number) => date ? \n                      <td \n                        key={i} \n                        onClick={() => props.handleDayClick(date)} \n                        className = {classnames('td-date', {\n                          'today': areEqual(date, props.baseDate),\n                          'selected': areEqual(date, props.selectedDate) \n                        })}\n                      >\n                        {date.getDate()}\n                      </td>\n                        :\n                          <td key={i} />\n                      )}\n                  </tr>\n                }) \n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Calendar","import React, { useState } from 'react';\nimport './Calendar.scss';\nimport { getMonthData } from './GetMonthData';\nimport Calendar from './Calendar';\n\nconst CalendarContainer = () => {\n\n  const baseDate: Date = new Date()\n\n  const months: Array<string> = [\n    'Январь', 'Февраля', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\n  ]\n  const years: Array<number> = [\n    2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022\n  ]\n  const weekDayNames: Array<string> = [\n    'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'\n  ]\n\n  const [date, setDate] = useState<Date>(baseDate)\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null)\n  const [monthData, setMonthData] = useState(getMonthData(date.getFullYear(), date.getMonth()))\n\n  const handlePrevMonthButtonClick = () => {\n    const prevDate: Date = new Date(date.getFullYear(), date.getMonth() - 1)\n    setDate(prevDate)\n    setMonthData(getMonthData(prevDate.getFullYear(), prevDate.getMonth()))\n  }\n  \n  const handleNextMonthButtonClick = () => {\n    const nextDate: Date = new Date(date.getFullYear(), date.getMonth() + 1)\n    setDate(nextDate)\n    setMonthData(getMonthData(nextDate.getFullYear(), nextDate.getMonth()))\n  }\n\n  const onSelectChange = (year: number, month: number) => {\n    const selectDate: Date = new Date(year, month)\n    setDate(selectDate)\n    setMonthData(getMonthData(selectDate.getFullYear(), selectDate.getMonth()))\n  }\n\n  const handleDayClick = (date: Date) => {\n    setSelectedDate(date)\n  }\n\n  return (\n    <Calendar\n      baseDate ={baseDate}\n      selectedDate = {selectedDate}\n      handlePrevMonthButtonClick = {handlePrevMonthButtonClick}\n      handleNextMonthButtonClick = {handleNextMonthButtonClick}\n      onSelectChange = {onSelectChange}\n      date = {date} \n      months = {months}\n      years = {years}\n      weekDayNames = {weekDayNames}\n      monthData = {monthData}\n      handleDayClick = {handleDayClick}\n    />\n  )\n}\n\nexport default CalendarContainer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport { onDataCharting } from '../../redux/allTOAC'\nimport { LineChart, Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts'\nimport './Richarts.scss';\n//types:\nimport { AppStateType } from '../../redux/store';\nimport { RechartsStateType, RechartsTypes } from '../../types/RechartsTypes';\n\nconst Recharts: React.FC<RechartsTypes & RouteComponentProps> = props => {\n\n  const history = useHistory()\n\n  useState(() => {\n    if (props.TOList !== null) {\n      props.onDataCharting(props.TOList)\n    } else {\n      history.push('/made-to')\n    }\n  })\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          {\n            props.dataRecharts &&\n              <div className=\"richarts\">\n                <h2 className=\"title-recharts\">График расходов</h2>\n                <div className=\"about-priceProduct\">priceProduct-Стоимсоть комплектующих</div>\n                <div className=\"about-priceWork\">priceWork-Стоимсоть работ</div>\n                <LineChart width={980} height={450} data={props.dataRecharts}\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"title\" />\n                  <YAxis type=\"number\" domain={[0, 'dataMax + 6700']}  />\n                  <Tooltip />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"priceProduct\" stroke=\"#0095FF\" />\n                  <Line type=\"monotone\" dataKey=\"priceWork\" stroke=\"#FF0000\" />\n                </LineChart>\n              </div>\n            }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): RechartsStateType => {\n  return{\n    TOList: state.allToReducer.TOList,\n    dataRecharts: state.allToReducer.dataRecharts\n  }\n}\nconst connector = connect(mapStateToProps, { onDataCharting })\nexport default connector(Recharts)","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport './App.scss';\nimport Navbar from './components/NavbarComponent/NavbarComponent';\nimport Register from './components/Register/Register';\nimport Login from './components/Login/Login';\nimport ContainerRegulationTO from './components/RegulationTO/ContainerRegulationTO';\nimport AddTo from './components/AddTo/addTO';\nimport ContainerMadeTO from './components/MadeTO/ContainerMadeTO';\nimport Home from './components/Home/Home';\nimport Footer from './components/Footer/Footer';\nimport Info from './components/Info/Info'\nimport CalendarContainer from './components/Calendar/CalendarContainer';\nimport Recharts from './components/Recharts/Recharts';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Navbar />\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\" render={ () => <Home /> } /> \n          <Route path=\"/regulation-to\" render={ () => <ContainerRegulationTO /> } />\n          <Route path=\"/made-to\" render={ () => <ContainerMadeTO /> } />\n          <Route path=\"/add-to\" render={ () => <AddTo /> } /> \n          <Route path=\"/calendar\" render={() => <CalendarContainer />} />\n          <Route path=\"/recharts\" render={() => <Recharts />} />\n          <Route path=\"/register\" render={ () => <Register/> } />\n          <Route path=\"/login\" render={ () => <Login/> } />\n          <Route path=\"/info\" render={ () => <Info/> } />\n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ActionsType, allTOTypes, InitialStateType } from '../types/AllTOStoreType';\n\nlet initialState: InitialStateType = {\n  TOList: null,\n  currentPage: 1,\n  start: 0,\n  end: 4,\n  showModal: false,\n  editData: null,\n  dataRecharts: null\n}\n\nconst allToReducer = (state = initialState, action: ActionsType): InitialStateType => {\n  switch (action.type) {\n    case allTOTypes.READ_LIST:\n      return {\n        ...state,\n        TOList: action.list\n      }\n    case allTOTypes.UPDATE_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.val.currentPage,\n        start: action.val.start,\n        end: action.val.end\n      }\n    case allTOTypes.FRESH_PAGINATION:\n      return {\n        ...state,\n        currentPage: 1,\n        start: 0,\n        end: 4\n      }\n    case allTOTypes.MODAL_FALSE_TRUE:\n      return {\n        ...state,\n        showModal: action.val\n      }\n    case allTOTypes.EDIT_DATA:\n      return {\n        ...state,\n        editData: action.val,\n        showModal: true\n      }\n    case allTOTypes.RESET_STATE:\n      return {\n        ...state,\n        TOList: null,\n        currentPage: 1,\n        start: 0,\n        end: 4,\n        showModal: false,\n        editData: null,\n        dataRecharts: null\n      }\n      case allTOTypes.UPDATE_RECHARTS:\n        return {\n          ...state,\n          dataRecharts: action.data\n        }\n    default: return state\n  }\n}\n\nexport default allToReducer","import { ActionsType, InitialStateType, LoginTypes } from '../types/LoginStoreType'\n\nlet initialState: InitialStateType = {\n  registered: null,\n  logined: null,\n  load: false\n}\n\nconst loginReducer = (state = initialState, action: ActionsType) => {\n  switch (action.type) {\n    case LoginTypes.REGISTER:\n      return {\n        ...state,\n        registered: action.reg\n      }\n      case LoginTypes.LOGIN:\n        return {\n          ...state,\n          logined: action.log\n        }\n      case LoginTypes.SET_LOADER:\n        return {\n          ...state,\n          load: action.val\n        }\n    default: return state\n  }\n}\nexport default loginReducer\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport allToReducer from './allToReducer'\nimport loginReducer from './loginReducer'\nimport thunkMiddleware from 'redux-thunk'\n\nlet rootReducer = combineReducers({\n  allToReducer,\n  loginReducer\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nconst storage = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nexport default storage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}