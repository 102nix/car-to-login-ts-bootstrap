{"version":3,"sources":["imgs/email2.png","imgs/calendar2.png","imgs/info.png","api/api.ts","redux/loginReducer.ts","components/NavbarComponent/NavbarComponent.tsx","FormControls/Input.tsx","Validators/validate.ts","components/Register/FormRegister.tsx","components/Register/Register.tsx","components/Login/FormLogin.tsx","components/Login/Login.tsx","redux/allToReducer.ts","components/Loader/Loader.js","components/RegulationTO/RegulationTO.tsx","components/RegulationTO/ContainerRegulationTO.tsx","components/AddTo/formAddTo.tsx","components/AddTo/addTO.tsx","components/ModalEdit/FormModal.tsx","components/ModalEdit/ModalEdit.tsx","components/MadeTO/MadeTo.tsx","components/MadeTO/ContainerMadeTO.tsx","components/Home/Home.js","components/Footer/Footer.tsx","components/Info/Info.tsx","components/Calendar/GetMonthData.ts","components/Calendar/Calendar.tsx","components/Calendar/CalendarContainer.tsx","components/Recharts/Recharts.tsx","App.js","serviceWorker.js","redux/store.ts","index.js"],"names":["module","exports","listAPI","src_list","axios","get","dataCarTO","id","Date","now","put","authAPI","email","password","post","returnSecureToken","initialState","registered","logined","load","setRegister","reg","type","setLogin","log","setLoader","val","loginReducer","state","action","connector","connect","props","history","useHistory","useEffect","localStorage","getItem","className","Navbar","expand","variant","Brand","Toggle","aria-controls","Collapse","exact","to","onClick","regLogin","push","FieldOfForm","input","meta","hasError","touched","error","console","name","FieldOfLogin","required","confirmPass","listParams","FormRegister","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","validate","disabled","role","aria-hidden","onRegistered","dataUserForm","dispatch","a","dataForm","FormLogin","onLogined","response","data","setItem","TOList","currentPage","start","end","showModal","editData","dataRecharts","setCurrentPage","reFresh","rechartsAC","onGetListTO","responseList","Object","values","list","allToReducer","Loader","RegulationTO","title","text","split","map","e","undefined","pages","pageCount","Math","ceil","length","i","doPaginate","dataPaginat","slice","key","titleTo","textTo","FormMadeTO","onSetListTO","FormModal","initialize","priceTo","price","htmlFor","setModal","ModalEdit","document","addEventListener","escFunction","event","Modal","show","onHide","url","onUpdateListTO","MadeTo","editTO","editDataModal","URL_LIST","Home","Carousel","Item","src","alt","Footer","calendar","width","height","href","info","Info","DAYS_IN_MONTH","areEqual","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","getDay","getDayOfWeek","day","j","Calendar","monthSelect","React","createRef","yearSelect","handleSelectChange","parseInt","current","value","onSelectChange","selectedDate","toLocaleDateString","handlePrevMonthButtonClick","ref","onChange","months","years","handleNextMonthButtonClick","weekDayNames","monthData","week","handleDayClick","classnames","baseDate","CalendarContainer","useState","setDate","setSelectedDate","setMonthData","prevDate","nextDate","selectDate","onDataCharting","listTO","dataPrice","pricePr","priceWrk","priceProduct","priceWork","compose","withRouter","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","stroke","App","path","render","Boolean","window","location","hostname","match","rootReducer","combineReducers","formReducer","storage","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7a795c08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/email2.ab47d52f.png\";","module.exports = __webpack_public_path__ + \"static/media/calendar2.25c7dc32.png\";","module.exports = __webpack_public_path__ + \"static/media/info.70c65088.png\";","import axios from 'axios';\n\nexport type DataCarTOType = {\n  priceTo: string\n  textTo: string\n  titleTo: string\n  id?: number\n}\n\n\nexport const listAPI = {\n\n  getlistTO (src_list: string) {\n    return axios.get<Object>(src_list)\n  },\n  setListMadeTO (dataCarTO: DataCarTOType) {\n    dataCarTO.id = Date.now()\n    return axios.put<Object>(`https://made-car-to.firebaseio.com/${dataCarTO.id}.json`, dataCarTO)\n  },\n  updateListMadeTO (dataCarTO: DataCarTOType) {\n    return axios.put<Object>(`https://made-car-to.firebaseio.com/${dataCarTO.id}.json`, dataCarTO)\n  }\n}\n\nexport const authAPI = {\n  login (email: string, password: string) {\n    const key = 'AIzaSyBA4J3rUo_F2m2MLz4NzGRUIBg-oTtOT_c' // API-key!!!\n    return axios.post(`https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=${key}`, {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    })\n  },\n  register (email: string, password: string) {\n    const key = 'AIzaSyBA4J3rUo_F2m2MLz4NzGRUIBg-oTtOT_c' // API-key!!!\n    return axios.post(`https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=${key}`, {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    })\n  }\n}","import { ThunkAction } from 'redux-thunk';\nimport { authAPI } from '../api/api';\nimport { FormUsesData } from '../components/Register/FormRegister';\nimport { AppStateType } from './store';\n\nconst REGISTER = 'REGISTER'\nconst LOGIN = 'LOGIN'\nconst SET_LOADER = 'SET_LOADER' \n\ntype InitialStateType = {\n  registered: null | boolean\n  logined: null | boolean\n  load: boolean\n}\n\nlet initialState: InitialStateType = {\n  registered: null,\n  logined: null,\n  load: false\n}\n\nconst loginReducer = (state = initialState, action: ActionsType) => {\n  switch (action.type) {\n    case REGISTER:\n      return {\n        ...state,\n        registered: action.reg\n      }\n      case LOGIN:\n        return {\n          ...state,\n          logined: action.log\n        }\n      case SET_LOADER:\n        return {\n          ...state,\n          load: action.val\n        }\n    default: return state\n  }\n}\n\ntype ActionsType = SetRegisterType | SetLoginType | SetLoaderType\n\ntype SetRegisterType = {\n  type: typeof REGISTER\n  reg: null | boolean\n}\ntype SetLoginType = {\n  type: typeof LOGIN\n  log: null | boolean\n}\ntype SetLoaderType = {\n  type: typeof SET_LOADER\n  val: boolean\n}\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\n\nexport const setRegister = (reg: boolean): SetRegisterType => ({type: REGISTER, reg})\nexport const setLogin = (log: boolean): SetLoginType => ({type: LOGIN, log})\nexport const setLoader = (val: boolean): SetLoaderType => ({type: SET_LOADER, val})\n\nexport const onRegistered = (dataUserForm: FormUsesData): ThunkType => async (dispatch) => {\n  try {\n    await authAPI.register(dataUserForm.email, dataUserForm.password)\n    dispatch(setRegister(true))\n    dispatch(setLoader(false))\n  } catch (error) {\n    dispatch(setRegister(false))\n  }\n}\nexport const onLogined = (dataUserForm: FormUsesData): ThunkType => async (dispatch) => {\n  try {\n    let response = await authAPI.login(dataUserForm.email, dataUserForm.password)\n    dispatch(setLogin(response.data.registered))\n    dispatch(setLoader(false))\n  } catch (error) {\n    dispatch(setLogin(false))\n    dispatch(setLoader(false))\n  }\n}\nexport default loginReducer\n","import React, { useEffect } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar'\nimport { connect } from 'react-redux';\nimport './NavbarComponent.scss';\nimport { AppStateType } from '../../redux/store';\nimport { setLogin } from '../../redux/loginReducer';\n\ntype MapeStateProps = {\n  logined: null | boolean\n}\ntype MapDispatchProps = {\n  setLogin(val: null | boolean): void\n}\n\nconst NavbarComponent: React.FC<MapeStateProps & MapDispatchProps> = props => {\n\n  const history = useHistory()\n\n  const onExit = () => {\n    delete localStorage.regLogin\n    props.setLogin(null)\n    history.push('/register')\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('regLogin')) props.setLogin(true)\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <Navbar expand=\"lg\" variant=\"dark\" className=\"navbarBG\">\n        <Navbar.Brand>Nissan Qashkai</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-toggle\" />\n        <Navbar.Collapse id=\"basic-toggle\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/regulation-to\" className=\"nav-link\">ТО по регламенту</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              { \n                props.logined === true &&\n                <NavLink to=\"/made-to\" className=\"nav-link\">Сделанные ТО</NavLink>\n              }\n            </li>\n            <li>\n              { \n                props.logined === true &&\n                <NavLink to=\"/add-to\" className=\"nav-link\">Добавить ТО</NavLink>\n              }\n            </li>\n            <li>\n              {\n                props.logined === true &&\n                <button className=\"btn nav-link\" onClick={onExit}>Выйти</button>\n              }\n              {\n                (props.logined === false || props.logined === null) &&\n                <NavLink to='/login' className=\"nav-link\">Login</NavLink>\n              }\n            </li>\n          </ul>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  )\n}\n\nlet mapStateToProps = (state: AppStateType): MapeStateProps => {\n  return {\n    logined: state.loginReducer.logined\n  }\n}\nconst connector = connect(mapStateToProps, { setLogin })\nexport default connector(NavbarComponent)\n","import React from 'react';\nimport { WrappedFieldProps } from 'redux-form';\nimport './FieldOfForm.scss';\n\n// type FieldFormType = {\n//   input: {\n//     name: string\n//     value: string\n//   }\n//   meta: {\n//     error: string | undefined\n//     touched: boolean\n//   }\n// }\n\nexport const FieldOfForm: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\n  const hasError = meta.touched && meta.error\n  console.log(input, meta)\n  return (\n    <> \n      {\n        input.name === 'titleTo'\n        ? <input {...input} {...props} />\n        : <textarea {...input} {...props} />\n      }\n      \n      { \n        hasError &&\n        <small>{meta.error}</small>\n      }\n    </>\n  )\n}\nexport const FieldOfLogin: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\n  const hasError = meta.touched && meta.error\n  return (\n    <> \n      <input {...input} {...props} />\n      { \n        hasError &&\n        <small>{meta.error}</small>\n      }\n    </>\n  )\n}\n\n","type FieldValidatorsType = (value: string) => string | undefined\ntype ConfirmPassType = (value: string, listParams: any) => string | undefined\n\nexport const required: FieldValidatorsType = (val) => {\n  if (val) return undefined\n  return 'Поле не должно быть пустым!'\n}\n\nexport const confirmPass: ConfirmPassType = (val, ...listParams) => {\n  const password: string = listParams[0].password\n  const confirmPass: string = val\n  if (password === confirmPass) return undefined\n  return 'Пароли не совпадают!'\n}\n\n","import React from 'react';\nimport './FormRegister.scss';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport { FieldOfLogin } from '../../FormControls/Input';\nimport { required, confirmPass } from '../../Validators/validate';\nimport { useHistory } from 'react-router-dom';\n\n export type FormUsesData = {\n  email: string\n  password: string\n  confirmpassword?: string\n}\n\ntype ContainerProps = {\n  onSubmit(dataForm: FormUsesData): void\n  load: boolean\n}\n\nconst FormReg: React.FC<InjectedFormProps<FormUsesData, ContainerProps> & ContainerProps> = ({handleSubmit, ...props}) => {\n  \n  const history = useHistory()\n\n  return (\n    <div className=\"container\">\n      <div className=\"reg-content\">\n        <div className=\"row\">\n          <p className=\"col-12 text-center title-reg\">Регистрация:</p>\n          <form className=\"col-8 reg-form\" onSubmit={handleSubmit}>\n            <div className=\"from-group\">\n              <Field\n                type=\"email\"\n                placeholder=\"Email\" \n                name=\"email\" \n                component={FieldOfLogin} \n                validate={[required]} \n                className=\"form-control\" \n              />\n            </div>\n            <div className=\"from-group\">\n              <Field\n                type=\"password\" \n                placeholder=\"Password\" \n                name=\"password\" \n                component={FieldOfLogin} \n                validate={[required]} \n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"from-group\">\n              <Field \n                type=\"password\"\n                placeholder=\"Confirm password\" \n                name=\"confirmpassword\" \n                component={FieldOfLogin} \n                validate={[confirmPass]} \n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"add-action\">\n              {\n                !props.load &&\n                <button className=\"btn btn-success\">\n                  Register\n                </button>\n              }\n              { \n                props.load &&\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  Registering...\n                </button>\n              } \n              <button className=\"btn btn-access have-login\" onClick={() => history.push('/login')}>Есть Login?</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n  \n}\nconst FormRegister = reduxForm<FormUsesData, ContainerProps>({form: 'Register-form'})(FormReg)\nexport default FormRegister ","import React from 'react';\nimport FormRegister from './FormRegister';\nimport { onRegistered, setLoader } from '../../redux/loginReducer';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormUsesData } from './FormRegister';\nimport { AppStateType } from '../../redux/store';\n\ntype MapeStateProps = {\n  registered: null | boolean\n  load: boolean\n}\ntype DispatcProps = {\n  onRegistered(dataForm: FormUsesData): void\n  setLoader(val: boolean): void\n}\n\nconst Register: React.FC<MapeStateProps & DispatcProps> = props => {\n\n  const history = useHistory()\n  \n  const onSubmit = (dataForm: FormUsesData): void => {\n    props.onRegistered(dataForm)\n    props.setLoader(true)\n  }\n\n  const onLocalStorage = () => {\n    history.push('/login')\n  }\n  \n  return (\n    <>\n    { \n      props.registered !== true || props.registered === null ?\n        <FormRegister\n          onSubmit={onSubmit} \n          load={props.load}\n        />\n      :\n      onLocalStorage()\n    }\n    {\n      props.registered === false &&\n      <div className=\"error-reg\">Ошибка регистрации!</div>\n    }\n    </>\n  )\n}\n\nlet mapStateToProps = (state: AppStateType): MapeStateProps => {\n  return {\n    registered: state.loginReducer.registered,\n    load: state.loginReducer.load\n  }\n}\n\nconst connector = connect(mapStateToProps, { onRegistered, setLoader })\nexport default connector(Register)\n","import React from 'react';\nimport './FormLogin.scss';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport { FieldOfLogin } from '../../FormControls/Input';\nimport { required } from '../../Validators/validate';\nimport { useHistory } from 'react-router-dom';\n\n export type FormDataLogin = {\n  email: string\n  password: string\n}\n\ntype ContainerProps = {\n  onSubmit(dataForm: FormDataLogin): void\n  load: boolean\n}\n\nconst FormLog: React.FC<InjectedFormProps<FormDataLogin, ContainerProps> & ContainerProps> = ({handleSubmit, ...props}) => {\n  \n  const history = useHistory()\n\n  return (\n    <div className=\"container\">\n      <div className=\"log-content\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center title-log\">Login:</div>\n          <form className=\"col-8 log-form\" onSubmit={handleSubmit}>\n            <div className=\"from-group\">\n              <Field\n                type=\"email\"\n                placeholder=\"Email\" \n                name=\"email\" \n                component={FieldOfLogin} \n                validate={[required]} \n                className=\"form-control\" \n              />\n            </div>\n            <div className=\"from-group\">\n              <Field \n                type=\"password\"\n                placeholder=\"Password\" \n                name=\"password\" \n                component={FieldOfLogin} \n                validate={[required]} \n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"add-action\">\n              {\n                !props.load &&\n                <button className=\"btn btn-success\">\n                  Login\n                </button>\n              }\n              { \n                props.load &&\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  Logining...\n                </button>\n              } \n              <button className=\"btn btn-access have-login\" onClick={() => history.push('/register')}>Нет Login'а?</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n  \n}\nconst FormLogin = reduxForm<FormDataLogin, ContainerProps>({form: 'Login-form'})(FormLog)\nexport default FormLogin ","import React from 'react';\nimport FormLogin, { FormDataLogin } from './FormLogin';\nimport { onLogined, setLoader } from '../../redux/loginReducer';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { AppStateType } from '../../redux/store';\n\ntype MapeStateProps = {\n  logined: null | boolean\n  load: boolean\n}\ntype DispatcProps = {\n  onLogined(dataForm: FormDataLogin): void\n  setLoader(val: boolean): void\n}\n\nconst Login: React.FC<MapeStateProps & DispatcProps> = props => {\n\n  const history = useHistory()\n  \n  const onSubmit = (dataForm: FormDataLogin): void => {\n    props.setLoader(true)\n    props.onLogined(dataForm)\n  }\n\n  const onLocalStorage = () => {\n    localStorage.setItem('regLogin', 'logined')\n    history.push('/')\n  }\n  \n  return (\n    <>\n    { \n      props.logined !== true || props.logined === null ?\n        <FormLogin\n         onSubmit={onSubmit}\n         load={props.load}\n        />\n      :\n      onLocalStorage()\n    }\n    {\n      props.logined === false &&\n      <div className=\"error-reg\">Неверный Login или password!</div>\n    }\n    </>\n  )\n}\n\nlet mapStateToProps = (state: AppStateType): MapeStateProps => {\n  return {\n    logined: state.loginReducer.logined,\n    load: state.loginReducer.load\n  }\n}\n\nconst connector = connect(mapStateToProps, { onLogined, setLoader })\nexport default connector(Login)\n","import { DataCarTOType, listAPI } from '../api/api';\nimport { ThunkAction } from 'redux-thunk'\nimport { AppStateType } from './store';\n\nconst READ_LIST = 'READ_LIST';\nconst UPDATE_CURRENT_PAGE = 'UPDATE_CURRENT_PAGE'\nconst FRESH_PAGINATION = 'FRESH_PAGINATION'\nconst MODAL_FALSE_TRUE = 'MODAL_FALSE_TRUE'\nconst EDIT_DATA = 'EDIT_DATA'\nconst RESET_STATE = 'RESET_STATE'\nconst URL_FOR_UPDATE = 'https://made-car-to.firebaseio.com/.json'\nconst UPDATE_RECHARTS = 'UPDATE_RECHARTS'\n\ntype TOListType = Array<EditDataType>\nexport type EditDataType = {id: number, titleTo: string, textTo: string, priceTo: string}\ntype DataRechartsType = Array<{title: string, priceProduct: string | number, priceWork: string | number}> \ntype DataChartingListType = Array<{priceTo: string, textTo: string, titleTo: string}>\n\nlet initialState = {\n  TOList: null as TOListType | null,\n  currentPage: 1,\n  start: 0,\n  end: 4,\n  showModal: false,\n  editData: null as EditDataType | null,\n  dataRecharts: null as DataRechartsType | null\n}\ntype InitialStateType = typeof initialState\n\nconst allToReducer = (state = initialState, action: ActionsType): InitialStateType => {\n  switch (action.type) {\n    case READ_LIST:\n      return {\n        ...state,\n        TOList: action.list\n      }\n    case UPDATE_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.val.currentPage,\n        start: action.val.start,\n        end: action.val.end\n      }\n    case FRESH_PAGINATION:\n      return {\n        ...state,\n        currentPage: 1,\n        start: 0,\n        end: 4\n      }\n    case MODAL_FALSE_TRUE:\n      return {\n        ...state,\n        showModal: action.val\n      }\n    case EDIT_DATA:\n      return {\n        ...state,\n        editData: action.val,\n        showModal: true\n      }\n    case RESET_STATE:\n      return {\n        ...state,\n        TOList: null,\n        currentPage: 1,\n        start: 0,\n        end: 4,\n        showModal: false,\n        editData: null,\n        dataRecharts: null\n      }\n      case UPDATE_RECHARTS:\n        return {\n          ...state,\n          dataRecharts: action.data\n        }\n    default: return state\n  }\n}\n\ntype ActionsType = GetTOListAC | SetCurrentPage | ReFresh | SetModal | EditDataModal | ResetState | RechartsAC\n\ntype GetTOListAC = {\n  type: typeof READ_LIST\n  list: TOListType\n}\n\ntype SetCurrentPage = {\n  type: typeof UPDATE_CURRENT_PAGE\n  val: {currentPage: number, start: number, end: number}\n}\n\ntype ReFresh = {\n  type: typeof FRESH_PAGINATION\n}\n\ntype SetModal = {\n  type: typeof MODAL_FALSE_TRUE\n  val: boolean\n}\n\ntype EditDataModal = {\n  type: typeof EDIT_DATA\n  val: EditDataType\n}\n\ntype ResetState = {\n  type: typeof RESET_STATE\n}\n\ntype RechartsAC = {\n  type: typeof UPDATE_RECHARTS\n  data: DataRechartsType\n}\n\nexport const getTOListAC = (list: TOListType): GetTOListAC => ({type: READ_LIST, list})\n\nexport const setCurrentPage = (val: {currentPage: number, start: number, end: number}): SetCurrentPage => \n  ({type: UPDATE_CURRENT_PAGE, val})\n\nexport const reFresh = () => ({type: FRESH_PAGINATION})\n\nexport const setModal = (val: boolean): SetModal => ({type: MODAL_FALSE_TRUE, val})\n\nexport const editDataModal = (val: EditDataType): EditDataModal => ({type: EDIT_DATA, val})\n\nexport const resetState = () => ({type: RESET_STATE})\n\nexport const rechartsAC = (data: DataRechartsType): RechartsAC => ({type: UPDATE_RECHARTS, data})\n\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType> \n\ntype ThunkTypeNotPromise = ThunkAction<void, AppStateType, unknown, ActionsType> \n\nexport const onGetListTO = (src_list: string): ThunkType => async (dispatch) => {\n  try {\n    const response = await listAPI.getlistTO(src_list)\n    const responseList: TOListType = Object.values(response.data)\n    dispatch(getTOListAC(responseList))\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const onSetListTO = (dataForm: DataCarTOType): ThunkType => async (dispatch) => {\n  try {\n    await listAPI.setListMadeTO(dataForm)\n    dispatch(onGetListTO(URL_FOR_UPDATE))\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const onUpdateListTO = (dataForm: DataCarTOType): ThunkType => async (dispatch) => {\n  try {\n    await listAPI.updateListMadeTO(dataForm)\n    dispatch(onGetListTO(URL_FOR_UPDATE))\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const onDataCharting = (listTO: DataChartingListType): ThunkTypeNotPromise => (dispatch) => {\n  const dataPrice: DataRechartsType = []\n  for (let data of listTO) {\n    const pricePr: Array<string | number> = data.priceTo.split(': ')\n    const priceWrk: Array<string | number> = data.textTo.split(': ')\n    const title: Array<string> = data.titleTo.split(';')\n    if (pricePr[1] === undefined) pricePr[1] = 0\n    if (priceWrk[1] === undefined) priceWrk[1] = 0\n\n    dataPrice.push(\n      {\n        title: title[0].split(' ')[0],\n        priceProduct: pricePr[1], \n        priceWork: priceWrk[1]\n      }\n    )\n  }\n  dispatch(rechartsAC(dataPrice))\n}\nexport default allToReducer","import React from 'react'\nimport './Loader.scss'\n\nconst Loader = props => {\n  return (\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  )\n}\n\nexport default Loader","import React from 'react';\nimport './RegulationTO.scss';\n\ntype ContainerProps = {\n  title: string\n  text: string\n}\n\nconst RegulationTO: React.FC<ContainerProps> = props => {\n  return (\n    <div className=\"row list-to\">\n      <div className=\"col-6 title-all\">\n        {props.title}\n      </div>\n      <div className=\"col-6 text-all\">\n        {\n          props.text\n            .split('. ')\n              .map(e => <p>{e}</p> )\n        }\n      </div>\n    </div>\n\n  )\n}\n\nexport default RegulationTO","import React from 'react';\nimport './ContainerRegulationTO.scss';\nimport { connect } from 'react-redux';\nimport { onGetListTO, setCurrentPage, reFresh } from '../../redux/allToReducer';\nimport Loader from '../Loader/Loader';\nimport RegulationTO from './RegulationTO';\nimport { AppStateType } from '../../redux/store';\n\ntype MapStatePropsType = {\n  TOList: Array<{id: number, titleTo: string, textTo: string, priceTo: string}> | null \n  currentPage: number\n  start: number\n  end: number\n}\ntype MapDispatchPropsType = {\n  onGetListTO(url: string): void\n  setCurrentPage(dataPaginat: {currentPage: number, start: number, end: number}): void\n  reFresh(): void\n}\ntype PropsType = MapStatePropsType & MapDispatchPropsType\n\nconst ContainerRegulationTO: React.FC<PropsType> = props => {\n\n  const URL_LIST: string = 'https://car-to.firebaseio.com/.json'\n\n  if (props.TOList === null) props.onGetListTO(URL_LIST)\n  if (props.currentPage === undefined || props.start === undefined || props.end === undefined) props.reFresh()\n\n  /////Pagination/////\n\n  let pages: Array<number> = []\n\n  if (props.TOList !== null) {\n    const pageSize: number = 3\n    const pageCount: number = Math.ceil(props.TOList.length / pageSize)\n    for (let i = 1; i < pageCount; i++) {\n      pages.push(i)\n    }\n  }\n\n  const doPaginate = (val: Array<number>) => {\n    const dataPaginat = {\n      currentPage: (props.currentPage + val[0]), // props.currentPage -/+ 1\n      start: (props.start + val[1]),\n      end: (props.end + val[1])\n    }\n    props.setCurrentPage(dataPaginat)\n  }\n\n  /////Pagination/////\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          {\n            props.currentPage !== 1 &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([-1, -2])}>&#171;</small>\n          }\n          {\n            props.currentPage <= pages.length &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([+1, +2])}>&#187;</small>\n          }\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 loader-container\">\n          {\n            props.TOList === null &&\n            <div className=\"loader\"><Loader /></div>\n          }\n        </div>\n      </div>\n      {\n        props.TOList !== null && props.TOList.length !== 0\n          ?\n          <>  \n            <div className=\"row text-center\">\n              <div className=\"col-12 title-regulation-to\">ТО по регламенту:</div>\n            </div>\n            {\n              props.TOList\n                .slice(props.start, props.end)\n                  .map(list => (<RegulationTO\n                      key={list.id}\n                      title={list.titleTo}\n                      text={list.textTo}\n                    />)\n                  )\n            }\n          </>\n          : <div className=\"list-empty\">\n              <p>Список пуст</p>\n            </div>\n      }\n    </div>\n  )\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    TOList: state.allToReducer.TOList, \n    currentPage: state.allToReducer.currentPage,\n    start: state.allToReducer.start,\n    end: state.allToReducer.end\n  }\n}\nconst connector = connect(mapStateToProps, { onGetListTO, setCurrentPage, reFresh }) \nexport default connector(ContainerRegulationTO)","import React from 'react';\nimport './formAddTo.scss';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport { FieldOfForm } from '../../FormControls/Input';\nimport { required } from '../../Validators/validate';\nimport { useHistory } from 'react-router-dom';\n\n export type FormUsesThisData = {\n  titleTo: string\n  textTo: string\n  priceTo: string\n}\n\ntype ContainerProps = {\n  onSubmit(dataForm: FormUsesThisData): void\n}\n\nconst FormMadeTOContainer: React.FC<InjectedFormProps<FormUsesThisData, ContainerProps> & ContainerProps> = ({handleSubmit, ...props}) => {\n  \n  const history = useHistory()\n\n  return (\n    <div className=\"add-content\">\n      <div className=\"title-add-content\">Добавить ТО:</div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"from-group\">\n          <Field\n            placeholder=\"Пробег и дата\" \n            name=\"titleTo\" \n            component={FieldOfForm} \n            validate={[required]} \n            className=\"form-control\" \n          />\n        </div>\n        <div className=\"from-group\">\n          <Field \n            placeholder=\"Регламентные работы и стоимость\" \n            name=\"textTo\" \n            component={FieldOfForm} \n            validate={[required]} \n            className=\"form-control\"\n            id=\"text\" \n          />\n        </div>\n        <div className=\"from-group\">\n          <Field \n            placeholder=\"Стоимость комплектующих\" \n            name=\"priceTo\" \n            component={FieldOfForm} \n            validate={[required]} \n            className=\"form-control\"\n            id=\"price\"\n          />\n        </div>\n        <div className=\"add-action\">\n          <button className=\"btn btn-success\">Сохранить</button>\n          <button className=\"btn btn-danger\" onClick={() => {history.push('/')}}>Отмена</button>\n        </div>\n      </form>\n    </div>\n  )\n  \n}\nconst FormMadeTO = reduxForm<FormUsesThisData, ContainerProps>({form: 'MadeTO'})(FormMadeTOContainer)\nexport default FormMadeTO \n","import React, { useEffect } from 'react';\nimport FormMadeTO from './formAddTo';\nimport { connect } from 'react-redux';\nimport { onSetListTO } from '../../redux/allToReducer';\nimport { useHistory } from 'react-router-dom';\nimport { FormUsesThisData } from './formAddTo';\nimport { AppStateType } from '../../redux/store';\n\ntype MapsPropsType = {\n  logined: null| boolean\n}\n\ntype DispatcProps = {\n  onSetListTO(dataForm: FormUsesThisData): void\n}\n\nconst CreateMadeTO: React.FC<DispatcProps & MapsPropsType> = props => {\n\n  const history = useHistory()\n  \n  useEffect(() => {\n    if (props.logined !== true) history.push('/login')\n  }, [])\n  \n  const onSubmit = (dataForm: FormUsesThisData): void => {\n    props.onSetListTO(dataForm)\n    history.push('/made-to')\n  }\n  \n  return (\n    <div className=\"container\">\n        <FormMadeTO onSubmit={onSubmit} />\n    </div>\n  )\n}\n\nlet mapStateToprops = (state: AppStateType): MapsPropsType => {\n  return{\n    logined: state.loginReducer.logined\n  }\n}\n\nconst connector = connect(mapStateToprops, { onSetListTO })\nexport default connector(CreateMadeTO)","import React, { useEffect } from 'react';\nimport './formModal.scss';\nimport { Field, reduxForm, InjectedFormProps } from 'redux-form';\nimport { FieldOfForm } from '../../FormControls/Input';\nimport { required } from '../../Validators/validate';\nimport { OnSubmitType } from './ModalEdit'; \n\ntype ContainerProps = {\n  onSubmit(dataForm: OnSubmitType): void\n  setModal(val: boolean): void\n  title: string\n  text: string\n  price: string\n}\n\ntype FormDataUse = {\n  titleTo: string\n  textTo: string\n  priceTo: string\n}\n\nconst FormModalComponent: React.FC<InjectedFormProps<FormDataUse, ContainerProps> & ContainerProps> = ({handleSubmit, ...props}) => {\n  \n  useEffect(() => {\n    props.initialize({\n      titleTo: props.title,\n      textTo: props.text,\n      priceTo: props.price\n    })\n  }, [])\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"from-group\">\n        <label htmlFor=\"title\">Пробег и дата:</label>\n        <Field \n          id=\"title\" \n          name=\"titleTo\" \n          component={FieldOfForm} \n          validate={[required]} \n          className=\"form-control\" \n        />\n      </div>\n      <div className=\"from-group\">\n        <label htmlFor=\"text\">Регламентные работы и стоимость:</label>\n        <Field \n          id=\"text\" \n          name=\"textTo\" \n          component={FieldOfForm} \n          validate={[required]} \n          className=\"form-control\" \n        />\n      </div>\n      <div className=\"from-group\">\n        <label htmlFor=\"price\">Стоимость комплектующих:</label>\n        <Field \n          id=\"price\" \n          name=\"priceTo\" \n          component={FieldOfForm} \n          validate={[required]} \n          className=\"form-control\" />\n      </div>\n      <div className=\"modal-action\">\n        <button className=\"btn btn-success\">Сохранить</button>\n        <button className=\"btn btn-danger\" onClick={() => props.setModal(false)}>Отменить</button>\n      </div>\n    </form>\n  )\n}\n\nconst FormModal = reduxForm<FormDataUse, ContainerProps>({form: 'modal-form'})(FormModalComponent)\nexport default FormModal\n\n\n","import React, { useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport FormModal from './FormModal';\n\ntype ContainerProps = {\n  titleTo: string\n  textTo: string\n  priceTo: string\n  id: number\n  url: string\n  showModal: boolean\n  setModal(val: boolean): void\n  onUpdateListTO(val: OnSubmitType): void\n}\n\nexport type OnSubmitType = {\n  titleTo: string\n  textTo: string\n  priceTo: string\n  id?: number\n  url?: string\n}\n\nexport const ModalEdit: React.FC<ContainerProps> = props => {\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction, false);\n  },[])\n\n  const escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') props.setModal(false)\n  }\n\n  const handleClose = () => {\n    props.setModal(false)\n  }\n\n  const onSubmit = (dataForm: OnSubmitType): void => {\n    dataForm.id = props.id // Расширяется пришедший объект свойством id (id из контейнерных props)\n    dataForm.url = props.url // Расширяется пришедший объект свойством url (url из контейнерных props)\n    props.onUpdateListTO(dataForm)\n    props.setModal(false)\n  }\n\n  return(\n    <Modal show={props.showModal} onHide={handleClose}>\n      <FormModal \n        onSubmit={onSubmit} \n        setModal={props.setModal}\n        title={props.titleTo} \n        text={props.textTo} \n        price={props.priceTo} \n      />\n    </Modal>\n  )\n}\n\n","import React from 'react';\nimport './MadeTo.scss';\nimport { EditDataType } from '../../redux/allToReducer';\n\ntype ContainerProps = {\n  editTO(val: EditDataType): void\n  id: number\n  titleTo: string\n  textTo: string\n  priceTo: string\n}\n\nexport const MadeTo: React.FC<ContainerProps> = props => {\n  return (\n    <div \n      className=\"row list-made-to\" \n      onClick={() => props.editTO({id: props.id, titleTo: props.titleTo, textTo: props.textTo, priceTo: props.priceTo})}>\n        <div className=\"col-12 col-md-2\">\n          <div className=\"title-made\">\n            {\n              props.titleTo\n                .split(';')\n                  .map((e, i) => {\n                    if (i === 0) return <p key={i} className=\"odometr\">{e}</p>\n                    return <p key={i} className=\"data\">{e}</p>\n                  })\n            }\n          </div>\n        </div>\n        <div className=\"col-12 col-md-5\">\n          <div className=\"text-made\">\n            {\n              props.textTo\n                .split(';')\n                  .map(e => <p key={e}>{e}</p>)\n            }\n          </div>\n        </div>\n        <div className=\"col-12 col-md-5\">\n          <div className=\"price-made\">\n            { \n              props.priceTo !== undefined \n                ? props.priceTo\n                    .split(';')\n                      .map(e => <p key={e}>{e}</p>)\n                : null\n            }\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default MadeTo","import React, { useEffect } from 'react';\nimport { onGetListTO, onUpdateListTO, setCurrentPage, reFresh, editDataModal, rechartsAC, setModal, EditDataType } from '../../redux/allToReducer';\nimport { ModalEdit } from '../ModalEdit/ModalEdit';\nimport MadeTo from './MadeTo';\nimport Loader from '../Loader/Loader';\nimport { connect } from 'react-redux';\nimport './CntainerMadeTo.scss';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { AppStateType } from '../../redux/store';\nimport { OnSubmitType } from '../ModalEdit/ModalEdit'; \n\ntype MapStateProps = {\n  TOList: Array<EditDataType> | null\n  currentPage: number \n  start: number \n  end: number \n  editData: EditDataType | null\n  showModal: boolean\n  logined: null | boolean\n}\n\ntype MapDispatchProps = {\n  onGetListTO(list: string) : void \n  setCurrentPage(dataPaginat: {currentPage: number, start: number, end: number}): void\n  reFresh(): void\n  editDataModal(val: EditDataType): void\n  setModal(val: boolean): void\n  onUpdateListTO(data: OnSubmitType): void\n}\n\ntype PropsType = MapStateProps & MapDispatchProps\n\nconst ContainerMadeTO: React.FC<PropsType> = props => {\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (props.logined !== true) history.push('/login')\n  }, [])\n\n  const URL_LIST: string = 'https://made-car-to.firebaseio.com/.json'\n\n  if (props.TOList === null) props.onGetListTO(URL_LIST)\n  if ( props.currentPage === undefined || props.start === undefined || props.end === undefined ) props.reFresh()\n\n  /////Pagination/////\n  let pages: Array<number> = []\n\n  if (props.TOList !== null) {\n    const pageSize = 4\n    const pageCount = Math.ceil(props.TOList.length / pageSize)\n\n    for (let i = 1; i <= pageCount; i++) {\n      pages.push(i)\n    }\n  }\n\n  const doPaginate = (val: Array<number>) => {\n    const dataPaginat = {\n      currentPage: (props.currentPage + val[0]),\n      start: (props.start + val[1]),\n      end: (props.end + val[1])\n    }\n    props.setCurrentPage(dataPaginat)\n  }\n\n /////Pagination/////\n\n const editTO = (val: EditDataType) => {\n  props.editDataModal(val)\n}\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          { \n            props.currentPage !== 1 &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([-1, -3])}>&#171;</small>\n          }\n          {\n            props.currentPage <= pages.length &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([1, 3])}>&#187;</small>\n          }\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 loader-container\">\n          { \n            props.TOList === null &&\n            <div className=\"loader\"><Loader /></div>\n          }\n        </div>\n      </div>\n      { \n        props.TOList !== null && props.TOList.length !== 0 \n          ? <>\n              {\n                props.editData !== null &&\n                <ModalEdit\n                  titleTo={props.editData.titleTo}\n                  textTo={props.editData.textTo}\n                  priceTo={props.editData.priceTo}\n                  id={props.editData.id}\n                  url={URL_LIST}\n                  showModal={props.showModal}\n                  setModal={props.setModal}\n                  onUpdateListTO={props.onUpdateListTO}\n                />\n\n              }\n              <div className=\"row text-center\">\n                <div className=\"col-12 title-made-to\">Сделанные ТО:</div>\n              </div>\n              {\n                props.TOList\n                  .slice(props.start, props.end)                 \n                    .map(list => (<MadeTo \n                      editTO={editTO}\n                      key={list.id}\n                      id={list.id}\n                      titleTo={list.titleTo}\n                      textTo={list.textTo}\n                      priceTo={list.priceTo}\n                      />)\n                    )\n                }\n                <div className=\"row text-center\">\n                  <NavLink to=\"/recharts\" className=\"link-to-recharts\">График расходов</NavLink>\n                </div>\n           </>\n          : \n            <div className=\"list-empty\">\n              <p>Список пуст</p>\n            </div>\n      }\n    </div>\n  )\n}\nlet mapStateToProps = (state: AppStateType): MapStateProps => {\n  return {\n    TOList: state.allToReducer.TOList,\n    currentPage: state.allToReducer.currentPage,\n    start: state.allToReducer.start,\n    end: state.allToReducer.end,\n    editData: state.allToReducer.editData,\n    showModal: state.allToReducer.showModal,\n    logined: state.loginReducer.logined\n  }\n}\nconst connector = connect(mapStateToProps, { onGetListTO, setCurrentPage, reFresh, editDataModal, rechartsAC, setModal, onUpdateListTO })\nexport default connector(ContainerMadeTO)","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport './Home.scss';\n\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Carousel>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://avtoportal.ru/uploads/posts/2017-07/1501488191_0caa1c573b704f708263d6b162eec19b.jpg\"\n                alt=\"First slide\"\n              />\n              {/* <Carousel.Caption>\n                <h3>First slide label</h3>\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n              </Carousel.Caption> */}\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://static2.sakh.com/i/md/auto/sales/12/83/1283135/n1283135_20190314082622_88ed3d0a.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://auto-database.com/image/pictures-of-nissan-qashqai2-2013-122809.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://s.auto.drom.ru/i24240/s/photos/36580/36579472/gen1200_469384372.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://s.auto.drom.ru/i24240/s/photos/36580/36579472/gen1200_469384372.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n          </Carousel>\n        </div>\n      </div>\n      <div className=\"row text-center mt-4\">\n        <div className=\"col-12\">\n          Nissan Qashqai 1.6 (J10)\n        </div>\n        <div className=\"col-12\">\n          В 2010 год проведен рестайлинг кроссовера.\n        </div>\n        <div className=\"col-12\">\n          Модел выпускалась до 2013 года.\n        </div>\n      </div>\n      <div className=\"row block-info\">\n        <div className=\"col-12 col-sm-6\">\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Общие\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип кузова\n                  </div>\n                <div className=\"text\">\n                  Внедорожник\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Кол-во дверей\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Кол-во мест\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Класс автомобиля J(кроссовер)\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"name-key\"></div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Двигатель внутреннего сгорания\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем двигателя в куб.см\n                  </div>\n                <div className=\"text\">\n                  1600\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расположение двигателя\n                  </div>\n                <div className=\"text\">\n                  Спереди, поперечно\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расположение цилиндров\n                  </div>\n                <div className=\"text\">\n                  L4\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Клапанов на цилиндр\n                  </div>\n                <div className=\"text\">\n                  4\n                  </div>\n              </div>\n              <div className=\"name-key\"></div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Трансмиссия\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип привода\n                  </div>\n                <div className=\"text\">\n                  передний\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип КПП\n                  </div>\n                <div className=\"text\">\n                  механика 5 ст.\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Подвеска\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Передняя\n                  </div>\n                <div className=\"text\">\n                  независимая\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Задняя\n                  </div>\n                <div className=\"text\">\n                  независимая\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-6\">\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Тормазная система\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Передние тормаза\n                  </div>\n                <div className=\"text\">\n                  дисковые\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Задние тормаза\n                  </div>\n                <div className=\"text\">\n                  дисковые\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Эксплуатационные показатели\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Разгон до 100 км/ч, с\n                  </div>\n                <div className=\"text\">\n                  12\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Максимальная скорость, км/ч\n                  </div>\n                <div className=\"text\">\n                  175\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (городской цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  8,4\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (загородный цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  5,7\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (смешанный цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  6,7\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (городской цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (загородный цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (смешанный цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Размеры\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Длина, мм\n                  </div>\n                <div className=\"text\">\n                  4310\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Ширина, мм\n                  </div>\n                <div className=\"text\">\n                  1780\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Высота, мм\n                  </div>\n                <div className=\"text\">\n                  1610\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колесная база, мм\n                  </div>\n                <div className=\"text\">\n                  2630\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колея колес спереди, мм\n                  </div>\n                <div className=\"text\">\n                  1540\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колея колес сзади, мм\n                  </div>\n                <div className=\"text\">\n                  1550\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Размер шин\n                  </div>\n                <div className=\"text\">\n                  215/65 R16\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Снаряженная масса, кг\n                  </div>\n                <div className=\"text\">\n                  1297\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем багажника, л\n                  </div>\n                <div className=\"text\">\n                  352/1513\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем топливного бака, л\n                  </div>\n                <div className=\"text\">\n                  65\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Footer.scss';\nimport email from '../../imgs/email2.png';\nimport calendar from '../../imgs/calendar2.png'\nimport info from '../../imgs/info.png'\n\nconst Footer: React.FC = () => {\n\n  return (\n    <div className=\"container\">\n      <div className=\"footer\">\n        <div className=\"row\">\n        <div className=\"col-12 footer-content\">\n          <div className=\"footer-info\">\n            <NavLink to=\"/calendar\" className=\"nav-link\">\n              <img src={calendar} width=\"45px\" height=\"45px\" alt=\"См календарь\"/> \n            </NavLink>\n            <a href=\"mailto:zalilov@list.ru?subject=Обращения с сайта\" className=\"nav-link\">\n              <img src={email} width=\"45px\" height=\"45px\" alt=\"Отправить email\"/> \n            </a>\n            <NavLink to=\"/info\" className=\"nav-link\">\n              <img src={info} width=\"45px\" height=\"45px\" alt=\"Информация о проекте\"/> \n            </NavLink>\n          </div>\n          <div className=\"copyright-container\">\n            © 2021 Copyright\n          </div>\n          </div>\n        </div>\n        </div>\n      </div>\n  )\n}\nexport default Footer","import React from 'react';\nimport './Info.scss';\n\nconst Info: React.FC = () => {\n  \n   return (\n    <div className=\"info\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">В данном проекте задействованы:</div>\n            <div className=\"card-body\">\n              <p>React, React-router-dom, React Function Components, React hooks, React-Typescript.</p>\n              <p>Redux, Redux-form, Redux-thunk, React-redux.</p>\n              <p>Bootstrap, React-bootstrap, Node-sass, CSS Flexbox.</p>\n              <p>Axios.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Info","const DAYS_IN_WEEK = 7\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nexport function areEqual(a: Date, b: Date | null) {\n\n  if (!a || !b) return false;\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  )\n}\n\nexport function isLeapYear(year: number) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nexport function getDaysInMonth(date: Date) {\n  const month = date.getMonth()\n  const year = date.getFullYear()\n\n  if (isLeapYear(year) && month === 1) {\n    return DAYS_IN_MONTH[month] + 1\n  } else {\n    return DAYS_IN_MONTH[month]\n  }\n}\n\nexport function getDayOfWeek(date: Date) {\n  if (date.getDay() === 0) return 6\n  return date.getDay() - 1\n}\n\nexport function getMonthData(year: number, month: number) {\n  const result: Array<any> = []\n  const date = new Date(year, month)\n  const daysInMonth = getDaysInMonth(date)\n  const monthStartsOn = getDayOfWeek(date)\n  let day = 1\n\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n    result[i] = []\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\n        result[i][j] = undefined\n      } else {\n        result[i][j] = new Date(year, month, day++)\n      }\n    }\n  }\n  return result\n}","import React from 'react';\nimport './Calendar.scss';\nimport { areEqual } from './GetMonthData';\nimport classnames from 'classnames';\n\ntype ContainerProps = {\n  baseDate: Date\n  selectedDate: Date | null\n  handlePrevMonthButtonClick(): void\n  handleNextMonthButtonClick(): void\n  onSelectChange(year: number, month: number): void\n  date: Date\n  months: Array<string>\n  years: Array<number>\n  weekDayNames: Array<string>\n  monthData: any\n  handleDayClick(date: Date): void\n}\n\nconst Calendar: React.FC<ContainerProps> = props => {\n\n  const monthSelect = React.createRef<HTMLSelectElement>()\n  const yearSelect = React.createRef<HTMLSelectElement>();\n  // monthSelect.current?.value\n  const handleSelectChange = () => {\n    const year = parseInt((yearSelect.current?.value || ''), 10)\n    const month = parseInt((monthSelect.current?.value || ''), 10)\n    props.onSelectChange(year, month)\n  }\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row text-center\">\n        <div className=\"col-12\">\n          {\n            props.selectedDate && \n            <p className=\"selected-data-show\">Выбранная дата: {props.selectedDate.toLocaleDateString()}</p>\n          }\n        </div>\n\n          <div className=\"col-12 header-calendar\">\n            <button className='btn btn-light' onClick={props.handlePrevMonthButtonClick}>{'<'}</button>\n            <select \n              className=\"select-calendar\" \n              ref={monthSelect} \n              onChange={handleSelectChange}\n              value={props.date.getMonth()}\n            >\n              {\n                props.months.map((month, i) => {\n                return <option key={month} value={i}>{month}</option>\n                })\n              }\n            </select>\n              <select\n                className=\"select-calendar\" \n                ref={yearSelect} \n                onChange={handleSelectChange}\n                value={props.date.getFullYear()}\n              >\n                {\n                  props.years.map(year => {\n                    return <option key={year} value={year}>{year}</option>\n                  })\n                }\n              </select>\n              <button className='btn btn-light' onClick={props.handleNextMonthButtonClick}>{'>'}</button>\n          </div>\n\n        <div className=\"col-12\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {\n                  props.weekDayNames.map(day => {\n                    return <th key={day}>{day}</th>\n                  })\n                }\n              </tr>\n            </thead>\n            <tbody>\n              { \n                props.monthData.map((week: Array<Date>, i: number) => {\n                  return <tr key={i}>\n                    { \n                      week.map((date: Date, i: number) => date ? \n                      <td \n                        key={i} \n                        onClick={() => props.handleDayClick(date)} \n                        className = {classnames('td-date', {\n                          'today': areEqual(date, props.baseDate),\n                          'selected': areEqual(date, props.selectedDate) \n                        })}\n                      >\n                        {date.getDate()}\n                      </td>\n                        :\n                          <td key={i} />\n                      )}\n                  </tr>\n                }) \n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Calendar","import React, { useState } from 'react';\nimport './Calendar.scss';\nimport { getMonthData } from './GetMonthData';\nimport Calendar from './Calendar';\n\nconst CalendarContainer = () => {\n\n  const baseDate: Date = new Date()\n\n  const months: Array<string> = [\n    'Январь', 'Февраля', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\n  ]\n  const years: Array<number> = [\n    2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020\n  ]\n  const weekDayNames: Array<string> = [\n    'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'\n  ]\n\n  const [date, setDate] = useState<Date>(baseDate)\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null)\n  const [monthData, setMonthData] = useState(getMonthData(date.getFullYear(), date.getMonth()))\n\n  const handlePrevMonthButtonClick = () => {\n    const prevDate: Date = new Date(date.getFullYear(), date.getMonth() - 1)\n    setDate(prevDate)\n    setMonthData(getMonthData(prevDate.getFullYear(), prevDate.getMonth()))\n  }\n  \n  const handleNextMonthButtonClick = () => {\n    const nextDate: Date = new Date(date.getFullYear(), date.getMonth() + 1)\n    setDate(nextDate)\n    setMonthData(getMonthData(nextDate.getFullYear(), nextDate.getMonth()))\n  }\n\n  const onSelectChange = (year: number, month: number) => {\n    const selectDate: Date = new Date(year, month)\n    setDate(selectDate)\n    setMonthData(getMonthData(selectDate.getFullYear(), selectDate.getMonth()))\n  }\n\n  const handleDayClick = (date: Date) => {\n    setSelectedDate(date)\n  }\n\n  return (\n    <Calendar\n      baseDate ={baseDate}\n      selectedDate = {selectedDate}\n      handlePrevMonthButtonClick = {handlePrevMonthButtonClick}\n      handleNextMonthButtonClick = {handleNextMonthButtonClick}\n      onSelectChange = {onSelectChange}\n      date = {date} \n      months = {months}\n      years = {years}\n      weekDayNames = {weekDayNames}\n      monthData = {monthData}\n      handleDayClick = {handleDayClick}\n    />\n  )\n}\n\nexport default CalendarContainer","import React, { useState } from 'react';\nimport { onDataCharting } from '../../redux/allToReducer';\nimport { connect } from 'react-redux';\nimport { LineChart, Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Richarts.scss';\nimport { compose } from 'redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { AppStateType } from '../../redux/store';\n\ntype MapStateProps = {\n  TOList: Array<{id: number, titleTo: string, textTo: string, priceTo: string}> | null\n  dataRecharts: Array<{title: string, priceProduct: string | number, priceWork: string | number}> | null\n}\n\ntype MapDispatchProps = {\n  onDataCharting(list: Array<{id: number, titleTo: string, textTo: string, priceTo: string}>): void\n}\n\ntype PropsType = MapStateProps & MapDispatchProps & RouteComponentProps \n\nconst Recharts: React.FC<PropsType> = props => {\n\n  useState(() => {\n    if (props.TOList !== null) {\n      props.onDataCharting(props.TOList)\n    } else {\n      props.history.push('/made-to')\n    }\n  })\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 col-sm-\">\n          <div className=\"richarts\">\n            {\n              props.dataRecharts &&\n                <>\n                  <h2 className=\"title-recharts\">График расходов</h2>\n                  <div className=\"about-priceProduct\">priceProduct-Стоимсоть комплектующих</div>\n                  <div className=\"about-priceWork\">priceWork-Стоимсоть работ</div>\n                  <LineChart width={980} height={450} data={props.dataRecharts}\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"title\" />\n                    <YAxis type=\"number\" domain={[0, 'dataMax + 6700']}  />\n                    <Tooltip />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"priceProduct\" stroke=\"#0095FF\" />\n                    <Line type=\"monotone\" dataKey=\"priceWork\" stroke=\"#FF0000\" />\n                  </LineChart>\n                </>\n              }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nlet mapStateToProps = (state: AppStateType): MapStateProps => {\n  return{\n    TOList: state.allToReducer.TOList,\n    dataRecharts: state.allToReducer.dataRecharts\n  }\n}\nconst connector = connect(mapStateToProps, { onDataCharting })\nexport default compose(\n  withRouter,\n  connector\n)(Recharts)","import React from 'react';\nimport './App.scss';\nimport Navbar from './components/NavbarComponent/NavbarComponent';\nimport Register from './components/Register/Register';\nimport Login from './components/Login/Login';\nimport ContainerRegulationTO from './components/RegulationTO/ContainerRegulationTO';\nimport AddTo from './components/AddTo/addTO';\nimport ContainerMadeTO from './components/MadeTO/ContainerMadeTO';\nimport Home from './components/Home/Home';\nimport Footer from './components/Footer/Footer';\nimport Info from './components/Info/Info'\nimport CalendarContainer from './components/Calendar/CalendarContainer';\nimport { Route } from 'react-router-dom';\nimport Recharts from './components/Recharts/Recharts';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Navbar />\n      <div className=\"content\">\n        <Route exact path=\"/\" render={ () => <Home /> } /> \n        <Route path=\"/regulation-to\" render={ () => <ContainerRegulationTO /> } />\n        <Route path=\"/made-to\" render={ () => <ContainerMadeTO /> } />\n        <Route path=\"/add-to\" render={ () => <AddTo /> } /> \n        <Route path=\"/calendar\" render={() => <CalendarContainer />} />\n        <Route path=\"/recharts\" render={() => <Recharts />} />\n        <Route path=\"/register\" render={ () => <Register/> } />\n        <Route path=\"/login\" render={ () => <Login/> } />\n        <Route path=\"/info\" render={ () => <Info/> } />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport allToReducer from './allToReducer';\nimport loginReducer from './loginReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\n\n\nlet rootReducer = combineReducers({\n  allToReducer,\n  loginReducer,\n  form: formReducer\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nconst storage = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nexport default storage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}